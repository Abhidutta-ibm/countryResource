2022-12-22 03:30:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(\00091,'Afghanistan',AFG[*]')\000d\000ainsert into Country values(\00092,'Albania',ALB')\000d\000ainsert into Country values(\00093,'Algeria',DZA')\000d\000ainsert into Country values(\00094,'American Samoa',ASM')\000d\000ainsert into Country values(\00095,'Andorra',AND')\000d\000ainsert into Country values(\00096,'Angola',AGO')\000d\000ainsert into Country values(\00097,'Anguilla',AIA')\000d\000ainsert into Country values(\00098,'Antarctica',ATA')\000d\000ainsert into Country values(\00099,'Antigua and Barbuda',ATG')\000d\000ainsert into Country values(\000910,'Argentina',ARG')\000d\000ainsert into Country values(\000911,'Armenia',ARM')\000d\000ainsert into Country values(\000912,'Aruba',ABW')\000d\000ainsert into Country values(\000913,'Australia',AUS')\000d\000ainsert into Country values(\000914,'Austria',AUT')\000d\000ainsert into Country values(\000915,'Azerbaijan',AZE')\000d\000ainsert into Country values(\000916,'Bahamas (the)',BHS')\000d\000ainsert into Country values(\000917,'Bahrain',BHR')\000d\000ainsert into Country values(\000918,'Bangladesh',BGD')\000d\000ainsert into Country values(\000919,'Barbados',BRB')\000d\000ainsert into Country values(\000920,'Belarus',BLR')\000d\000ainsert into Country values(\000921,'Belgium',BEL')\000d\000ainsert into Country values(\000922,'Belize',BLZ')\000d\000ainsert into Country values(\000923,'Benin',BEN')\000d\000ainsert into Country values(\000924,'Bermuda',BMU')\000d\000ainsert into Country values(\000925,'Bhutan',BTN')\000d\000ainsert into Country values(\000926,'Bolivia (Plurinational State of)',BOL')\000d\000ainsert into Country values(\000927,'Bonaire, Sint Eustatius and Saba',BES')\000d\000ainsert into Country values(\000928,'Bosnia and Herzegovina',BIH')\000d\000ainsert into Country values(\000929,'Botswana',BWA')\000d\000ainsert into Country values(\000930,'Bouvet Island',BVT')\000d\000ainsert into Country values(\000931,'Brazil',BRA')\000d\000ainsert into Country values(\000932,'British Indian Ocean Territory (the)',IOT')\000d\000ainsert into Country values(\000933,'Brunei Darussalam',BRN')\000d\000ainsert into Country values(\000934,'Bulgaria',BGR')\000d\000ainsert into Country values(\000935,'Burkina Faso',BFA')\000d\000ainsert into Country values(\000936,'Burundi',BDI')\000d\000ainsert into Country values(\000937,'Cabo Verde',CPV')\000d\000ainsert into Country values(\000938,'Cambodia',KHM')\000d\000ainsert into Country values(\000939,'Cameroon',CMR')\000d\000ainsert into Country values(\000940,'Canada',CAN')\000d\000ainsert into Country values(\000941,'Cayman Islands (the)',CYM')\000d\000ainsert into Country values(\000942,'Central African Republic (the)',CAF')\000d\000ainsert into Country values(\000943,'Chad',TCD')\000d\000ainsert into Country values(\000944,'Chile',CHL')\000d\000ainsert into Country values(\000945,'China',CHN')\000d\000ainsert into Country values(\000946,'Christmas Island',CXR')\000d\000ainsert into Country values(\000947,'Cocos (Keeling) Islands (the)',CCK')\000d\000ainsert into Country values(\000948,'Colombia',COL')\000d\000ainsert into Country values(\000949,'Comoros (the)',COM')\000d\000ainsert into Country values(\000950,'Congo (the Democratic Republic of the)',COD')\000d\000ainsert into Country values(\000951,'Congo (the)',COG')\000d\000ainsert into Country values(\000952,'Cook Islands (the)',COK')\000d\000ainsert into Country values(\000953,'Costa Rica',CRI')\000d\000ainsert into Country values(\000954,'Croatia',HRV')\000d\000ainsert into Country values(\000955,'Cuba',CUB')\000d\000ainsert into Country values(\000956,'Curaçao',CUW')\000d\000ainsert into Country values(\000957,'Cyprus',CYP')\000d\000ainsert into Country values(\000958,'Czechia',CZE')\000d\000ainsert into Country values(\000959,'Côte d'Ivoire',CIV')\000d\000ainsert into Country values(\000960,'Denmark',DNK')\000d\000ainsert into Country values(\000961,'Djibouti',DJI')\000d\000ainsert into Country values(\000962,'Dominica',DMA')\000d\000ainsert into Country values(\000963,'Dominican Republic (the)',DOM')\000d\000ainsert into Country values(\000964,'Ecuador',ECU')\000d\000ainsert into Country values(\000965,'Egypt',EGY')\000d\000ainsert into Country values(\000966,'El Salvador',SLV')\000d\000ainsert into Country values(\000967,'Equatorial Guinea',GNQ')\000d\000ainsert into Country values(\000968,'Eritrea',ERI')\000d\000ainsert into Country values(\000969,'Estonia',EST')\000d\000ainsert into Country values(\000970,'Eswatini',SWZ')\000d\000ainsert into Country values(\000971,'Ethiopia',ETH')\000d\000ainsert into Country values(\000972,'Falkland Islands (the) [Malvinas]',FLK')\000d\000ainsert into Country values(\000973,'Faroe Islands (the)',FRO')\000d\000ainsert into Country values(\000974,'Fiji',FJI')\000d\000ainsert into Country values(\000975,'Finland',FIN')\000d\000ainsert into Country values(\000976,'France',FRA')\000d\000ainsert into Country values(\000977,'French Guiana',GUF')\000d\000ainsert into Country values(\000978,'French Polynesia',PYF')\000d\000ainsert into Country values(\000979,'French Southern Territories (the)',ATF')\000d\000ainsert into Country values(\000980,'Gabon',GAB')\000d\000ainsert into Country values(\000981,'Gambia (the)',GMB')\000d\000ainsert into Country values(\000982,'Georgia',GEO')\000d\000ainsert into Country values(\000983,'Germany',DEU')\000d\000ainsert into Country values(\000984,'Ghana',GHA')\000d\000ainsert into Country values(\000985,'Gibraltar',GIB')\000d\000ainsert into Country values(\000986,'Greece',GRC')\000d\000ainsert into Country values(\000987,'Greenland',GRL')\000d\000ainsert into Country values(\000988,'Grenada',GRD')\000d\000ainsert into Country values(\000989,'Guadeloupe',GLP')\000d\000ainsert into Country values(\000990,'Guam',GUM')\000d\000ainsert into Country values(\000991,'Guatemala',GTM')\000d\000ainsert into Country values(\000992,'Guernsey',GGY')\000d\000ainsert into Country values(\000993,'Guinea',GIN')\000d\000ainsert into Country values(\000994,'Guinea-Bissau',GNB')\000d\000ainsert into Country values(\000995,'Guyana',GUY')\000d\000ainsert into Country values(\000996,'Haiti',HTI')\000d\000ainsert into Country values(\000997,'Heard Island and McDonald Islands',HMD')\000d\000ainsert into Country values(\000998,'Holy See (the)',VAT')\000d\000ainsert into Country values(\000999,'Honduras',HND')\000d\000ainsert into Country values(\0009100,'Hong Kong',HKG')\000d\000ainsert into Country values(\0009101,'Hungary',HUN')\000d\000ainsert into Country values(\0009102,'Iceland',ISL')\000d\000ainsert into Country values(\0009103,'India',IND')\000d\000ainsert into Country values(\0009104,'Indonesia',IDN')\000d\000ainsert into Country values(\0009105,'Iran (Islamic Republic of)',IRN')\000d\000ainsert into Country values(\0009106,'Iraq',IRQ')\000d\000ainsert into Country values(\0009107,'Ireland',IRL')\000d\000ainsert into Country values(\0009108,'Isle of Man',IMN')\000d\000ainsert into Country values(\0009109,'Israel',ISR')\000d\000ainsert into Country values(\0009110,'Italy',ITA')\000d\000ainsert into Country values(\0009111,'Jamaica',JAM')\000d\000ainsert into Country values(\0009112,'Japan',JPN')\000d\000ainsert into Country values(\0009113,'Jersey',JEY')\000d\000ainsert into Country values(\0009114,'Jordan',JOR')\000d\000ainsert into Country values(\0009115,'Kazakhstan',KAZ')\000d\000ainsert into Country values(\0009116,'Kenya',KEN')\000d\000ainsert into Country values(\0009117,'Kiribati',KIR')\000d\000ainsert into Country values(\0009118,'Korea (the Democratic People's Republic of)',PRK')\000d\000ainsert into Country values(\0009119,'Korea (the Republic of)',KOR')\000d\000ainsert into Country values(\0009120,'Kuwait',KWT')\000d\000ainsert into Country values(\0009121,'Kyrgyzstan',KGZ')\000d\000ainsert into Country values(\0009122,'Lao People's Democratic Republic (the)',LAO')\000d\000ainsert into Country values(\0009123,'Latvia',LVA')\000d\000ainsert into Country values(\0009124,'Lebanon',LBN')\000d\000ainsert into Country values(\0009125,'Lesotho',LSO')\000d\000ainsert into Country values(\0009126,'Liberia',LBR')\000d\000ainsert into Country values(\0009127,'Libya',LBY')\000d\000ainsert into Country values(\0009128,'Liechtenstein',LIE')\000d\000ainsert into Country values(\0009129,'Lithuania',LTU')\000d\000ainsert into Country values(\0009130,'Luxembourg',LUX')\000d\000ainsert into Country values(\0009131,'Macao',MAC')\000d\000ainsert into Country values(\0009132,'Madagascar',MDG')\000d\000ainsert into Country values(\0009133,'Malawi',MWI')\000d\000ainsert into Country values(\0009134,'Malaysia',MYS')\000d\000ainsert into Country values(\0009135,'Maldives',MDV')\000d\000ainsert into Country values(\0009136,'Mali',MLI')\000d\000ainsert into Country values(\0009137,'Malta',MLT')\000d\000ainsert into Country values(\0009138,'Marshall Islands (the)',MHL')\000d\000ainsert into Country values(\0009139,'Martinique',MTQ')\000d\000ainsert into Country values(\0009140,'Mauritania',MRT')\000d\000ainsert into Country values(\0009141,'Mauritius',MUS')\000d\000ainsert into Country values(\0009142,'Mayotte',MYT')\000d\000ainsert into Country values(\0009143,'Mexico',MEX')\000d\000ainsert into Country values(\0009144,'Micronesia (Federated States of)',FSM')\000d\000ainsert into Country values(\0009145,'Moldova (the Republic of)',MDA')\000d\000ainsert into Country values(\0009146,'Monaco',MCO')\000d\000ainsert into Country values(\0009147,'Mongolia',MNG')\000d\000ainsert into Country values(\0009148,'Montenegro',MNE')\000d\000ainsert into Country values(\0009149,'Montserrat',MSR')\000d\000ainsert into Country values(\0009150,'Morocco',MAR')\000d\000ainsert into Country values(\0009151,'Mozambique',MOZ')\000d\000ainsert into Country values(\0009152,'Myanmar',MMR')\000d\000ainsert into Country values(\0009153,'Namibia',NAM')\000d\000ainsert into Country values(\0009154,'Nauru',NRU')\000d\000ainsert into Country values(\0009155,'Nepal',NPL')\000d\000ainsert into Country values(\0009156,'Netherlands (the)',NLD')\000d\000ainsert into Country values(\0009157,'New Caledonia',NCL')\000d\000ainsert into Country values(\0009158,'New Zealand',NZL')\000d\000ainsert into Country values(\0009159,'Nicaragua',NIC')\000d\000ainsert into Country values(\0009160,'Niger (the)',NER')\000d\000ainsert into Country values(\0009161,'Nigeria',NGA')\000d\000ainsert into Country values(\0009162,'Niue',NIU')\000d\000ainsert into Country values(\0009163,'Norfolk Island',NFK')\000d\000ainsert into Country values(\0009164,'Northern Mariana Islands (the)',MNP')\000d\000ainsert into Country values(\0009165,'Norway',NOR')\000d\000ainsert into Country values(\0009166,'Oman',OMN')\000d\000ainsert into Country values(\0009167,'Pakistan',PAK')\000d\000ainsert into Country values(\0009168,'Palau',PLW')\000d\000ainsert into Country values(\0009169,'Palestine, State of',PSE')\000d\000ainsert into Country values(\0009170,'Panama',PAN')\000d\000ainsert into Country values(\0009171,'Papua New Guinea',PNG')\000d\000ainsert into Country values(\0009172,'Paraguay',PRY')\000d\000ainsert into Country values(\0009173,'Peru',PER')\000d\000ainsert into Country values(\0009174,'Philippines (the)',PHL')\000d\000ainsert into Country values(\0009175,'Pitcairn',PCN')\000d\000ainsert into Country values(\0009176,'Poland',POL')\000d\000ainsert into Country values(\0009177,'Portugal',PRT')\000d\000ainsert into Country values(\0009178,'Puerto Rico',PRI')\000d\000ainsert into Country values(\0009179,'Qatar',QAT')\000d\000ainsert into Country values(\0009180,'Republic of North Macedonia',MKD')\000d\000ainsert into Country values(\0009181,'Romania',ROU')\000d\000ainsert into Country values(\0009182,'Russian Federation (the)',RUS')\000d\000ainsert into Country values(\0009183,'Rwanda',RWA')\000d\000ainsert into Country values(\0009184,'Réunion',REU')\000d\000ainsert into Country values(\0009185,'Saint Barthélemy',BLM')\000d\000ainsert into Country values(\0009186,'Saint Helena, Ascension and Tristan da Cunha',SHN')\000d\000ainsert into Country values(\0009187,'Saint Kitts and Nevis',KNA')\000d\000ainsert into Country values(\0009188,'Saint Lucia',LCA')\000d\000ainsert into Country values(\0009189,'Saint Martin (French part)',MAF')\000d\000ainsert into Country values(\0009190,'Saint Pierre and Miquelon',SPM')\000d\000ainsert into Country values(\0009191,'Saint Vincent and the Grenadines',VCT')\000d\000ainsert into Country values(\0009192,'Samoa',WSM')\000d\000ainsert into Country values(\0009193,'San Marino',SMR')\000d\000ainsert into Country values(\0009194,'Sao Tome and Principe',STP')\000d\000ainsert into Country values(\0009195,'Saudi Arabia',SAU')\000d\000ainsert into Country values(\0009196,'Senegal',SEN')\000d\000ainsert into Country values(\0009197,'Serbia',SRB')\000d\000ainsert into Country values(\0009198,'Seychelles',SYC')\000d\000ainsert into Country values(\0009199,'Sierra Leone',SLE')\000d\000ainsert into Country values(\0009200,'Singapore',SGP')\000d\000ainsert into Country values(\0009201,'Sint Maarten (Dutch part)',SXM')\000d\000ainsert into Country values(\0009202,'Slovakia',SVK')\000d\000ainsert into Country values(\0009203,'Slovenia',SVN')\000d\000ainsert into Country values(\0009204,'Solomon Islands',SLB')\000d\000ainsert into Country values(\0009205,'Somalia',SOM')\000d\000ainsert into Country values(\0009206,'South Africa',ZAF')\000d\000ainsert into Country values(\0009207,'South Georgia and the South Sandwich Islands',SGS')\000d\000ainsert into Country values(\0009208,'South Sudan',SSD')\000d\000ainsert into Country values(\0009209,'Spain',ESP')\000d\000ainsert into Country values(\0009210,'Sri Lanka',LKA')\000d\000ainsert into Country values(\0009211,'Sudan (the)',SDN')\000d\000ainsert into Country values(\0009212,'Suriname',SUR')\000d\000ainsert into Country values(\0009213,'Svalbard and Jan Mayen',SJM')\000d\000ainsert into Country values(\0009214,'Sweden',SWE')\000d\000ainsert into Country values(\0009215,'Switzerland',CHE')\000d\000ainsert into Country values(\0009216,'Syrian Arab Republic',SYR')\000d\000ainsert into Country values(\0009217,'Taiwan (Province of China)',TWN')\000d\000ainsert into Country values(\0009218,'Tajikistan',TJK')\000d\000ainsert into Country values(\0009219,'Tanzania, United Republic of',TZA')\000d\000ainsert into Country values(\0009220,'Thailand',THA')\000d\000ainsert into Country values(\0009221,'Timor-Leste',TLS')\000d\000ainsert into Country values(\0009222,'Togo',TGO')\000d\000ainsert into Country values(\0009223,'Tokelau',TKL')\000d\000ainsert into Country values(\0009224,'Tonga',TON')\000d\000ainsert into Country values(\0009225,'Trinidad and Tobago',TTO')\000d\000ainsert into Country values(\0009226,'Tunisia',TUN')\000d\000ainsert into Country values(\0009227,'Turkey',TUR')\000d\000ainsert into Country values(\0009228,'Turkmenistan',TKM')\000d\000ainsert into Country values(\0009229,'Turks and Caicos Islands (the)',TCA')\000d\000ainsert into Country values(\0009230,'Tuvalu',TUV')\000d\000ainsert into Country values(\0009231,'Uganda',UGA')\000d\000ainsert into Country values(\0009232,'Ukraine',UKR')\000d\000ainsert into Country values(\0009233,'United Arab Emirates (the)',ARE')\000d\000ainsert into Country values(\0009234,'United Kingdom of Great Britain and Northern Ireland (the)',GBR')\000d\000ainsert into Country values(\0009235,'United States Minor Outlying Islands (the)',UMI')\000d\000ainsert into Country values(\0009236,'United States of America (the)',USA')\000d\000ainsert into Country values(\0009237,'Uruguay',URY')\000d\000ainsert into Country values(\0009238,'Uzbekistan',UZB')\000d\000ainsert into Country values(\0009239,'Vanuatu',VUT')\000d\000ainsert into Country values(\0009240,'Venezuela (Bolivarian Republic of)',VEN')\000d\000ainsert into Country values(\0009241,'Viet Nam',VNM')\000d\000ainsert into Country values(\0009242,'Virgin Islands (British)',VGB')\000d\000ainsert into Country values(\0009243,'Virgin Islands (U.S.)',VIR')\000d\000ainsert into Country values(\0009244,'Wallis and Futuna',WLF')\000d\000ainsert into Country values(\0009245,'Western Sahara',ESH')\000d\000ainsert into Country values(\0009246,'Yemen',YEM')\000d\000ainsert into Country values(\0009247,'Zambia',ZMB')\000d\000ainsert into Country values(\0009248,'Zimbabwe',ZWE')\000d\000ainsert into Country values(\0009249,'Åland Islands',ALA')"; expected "(, ., [, ::, AT, FORMAT, *, /, %, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ,, )"; SQL statement:
insert into Country values(	1,'Afghanistan',AFG')
insert into Country values(	2,'Albania',ALB')
insert into Country values(	3,'Algeria',DZA')
insert into Country values(	4,'American Samoa',ASM')
insert into Country values(	5,'Andorra',AND')
insert into Country values(	6,'Angola',AGO')
insert into Country values(	7,'Anguilla',AIA')
insert into Country values(	8,'Antarctica',ATA')
insert into Country values(	9,'Antigua and Barbuda',ATG')
insert into Country values(	10,'Argentina',ARG')
insert into Country values(	11,'Armenia',ARM')
insert into Country values(	12,'Aruba',ABW')
insert into Country values(	13,'Australia',AUS')
insert into Country values(	14,'Austria',AUT')
insert into Country values(	15,'Azerbaijan',AZE')
insert into Country values(	16,'Bahamas (the)',BHS')
insert into Country values(	17,'Bahrain',BHR')
insert into Country values(	18,'Bangladesh',BGD')
insert into Country values(	19,'Barbados',BRB')
insert into Country values(	20,'Belarus',BLR')
insert into Country values(	21,'Belgium',BEL')
insert into Country values(	22,'Belize',BLZ')
insert into Country values(	23,'Benin',BEN')
insert into Country values(	24,'Bermuda',BMU')
insert into Country values(	25,'Bhutan',BTN')
insert into Country values(	26,'Bolivia (Plurinational State of)',BOL')
insert into Country values(	27,'Bonaire, Sint Eustatius and Saba',BES')
insert into Country values(	28,'Bosnia and Herzegovina',BIH')
insert into Country values(	29,'Botswana',BWA')
insert into Country values(	30,'Bouvet Island',BVT')
insert into Country values(	31,'Brazil',BRA')
insert into Country values(	32,'British Indian Ocean Territory (the)',IOT')
insert into Country values(	33,'Brunei Darussalam',BRN')
insert into Country values(	34,'Bulgaria',BGR')
insert into Country values(	35,'Burkina Faso',BFA')
insert into Country values(	36,'Burundi',BDI')
insert into Country values(	37,'Cabo Verde',CPV')
insert into Country values(	38,'Cambodia',KHM')
insert into Country values(	39,'Cameroon',CMR')
insert into Country values(	40,'Canada',CAN')
insert into Country values(	41,'Cayman Islands (the)',CYM')
insert into Country values(	42,'Central African Republic (the)',CAF')
insert into Country values(	43,'Chad',TCD')
insert into Country values(	44,'Chile',CHL')
insert into Country values(	45,'China',CHN')
insert into Country values(	46,'Christmas Island',CXR')
insert into Country values(	47,'Cocos (Keeling) Islands (the)',CCK')
insert into Country values(	48,'Colombia',COL')
insert into Country values(	49,'Comoros (the)',COM')
insert into Country values(	50,'Congo (the Democratic Republic of the)',COD')
insert into Country values(	51,'Congo (the)',COG')
insert into Country values(	52,'Cook Islands (the)',COK')
insert into Country values(	53,'Costa Rica',CRI')
insert into Country values(	54,'Croatia',HRV')
insert into Country values(	55,'Cuba',CUB')
insert into Country values(	56,'Curaçao',CUW')
insert into Country values(	57,'Cyprus',CYP')
insert into Country values(	58,'Czechia',CZE')
insert into Country values(	59,'Côte d'Ivoire',CIV')
insert into Country values(	60,'Denmark',DNK')
insert into Country values(	61,'Djibouti',DJI')
insert into Country values(	62,'Dominica',DMA')
insert into Country values(	63,'Dominican Republic (the)',DOM')
insert into Country values(	64,'Ecuador',ECU')
insert into Country values(	65,'Egypt',EGY')
insert into Country values(	66,'El Salvador',SLV')
insert into Country values(	67,'Equatorial Guinea',GNQ')
insert into Country values(	68,'Eritrea',ERI')
insert into Country values(	69,'Estonia',EST')
insert into Country values(	70,'Eswatini',SWZ')
insert into Country values(	71,'Ethiopia',ETH')
insert into Country values(	72,'Falkland Islands (the) [Malvinas]',FLK')
insert into Country values(	73,'Faroe Islands (the)',FRO')
insert into Country values(	74,'Fiji',FJI')
insert into Country values(	75,'Finland',FIN')
insert into Country values(	76,'France',FRA')
insert into Country values(	77,'French Guiana',GUF')
insert into Country values(	78,'French Polynesia',PYF')
insert into Country values(	79,'French Southern Territories (the)',ATF')
insert into Country values(	80,'Gabon',GAB')
insert into Country values(	81,'Gambia (the)',GMB')
insert into Country values(	82,'Georgia',GEO')
insert into Country values(	83,'Germany',DEU')
insert into Country values(	84,'Ghana',GHA')
insert into Country values(	85,'Gibraltar',GIB')
insert into Country values(	86,'Greece',GRC')
insert into Country values(	87,'Greenland',GRL')
insert into Country values(	88,'Grenada',GRD')
insert into Country values(	89,'Guadeloupe',GLP')
insert into Country values(	90,'Guam',GUM')
insert into Country values(	91,'Guatemala',GTM')
insert into Country values(	92,'Guernsey',GGY')
insert into Country values(	93,'Guinea',GIN')
insert into Country values(	94,'Guinea-Bissau',GNB')
insert into Country values(	95,'Guyana',GUY')
insert into Country values(	96,'Haiti',HTI')
insert into Country values(	97,'Heard Island and McDonald Islands',HMD')
insert into Country values(	98,'Holy See (the)',VAT')
insert into Country values(	99,'Honduras',HND')
insert into Country values(	100,'Hong Kong',HKG')
insert into Country values(	101,'Hungary',HUN')
insert into Country values(	102,'Iceland',ISL')
insert into Country values(	103,'India',IND')
insert into Country values(	104,'Indonesia',IDN')
insert into Country values(	105,'Iran (Islamic Republic of)',IRN')
insert into Country values(	106,'Iraq',IRQ')
insert into Country values(	107,'Ireland',IRL')
insert into Country values(	108,'Isle of Man',IMN')
insert into Country values(	109,'Israel',ISR')
insert into Country values(	110,'Italy',ITA')
insert into Country values(	111,'Jamaica',JAM')
insert into Country values(	112,'Japan',JPN')
insert into Country values(	113,'Jersey',JEY')
insert into Country values(	114,'Jordan',JOR')
insert into Country values(	115,'Kazakhstan',KAZ')
insert into Country values(	116,'Kenya',KEN')
insert into Country values(	117,'Kiribati',KIR')
insert into Country values(	118,'Korea (the Democratic People's Republic of)',PRK')
insert into Country values(	119,'Korea (the Republic of)',KOR')
insert into Country values(	120,'Kuwait',KWT')
insert into Country values(	121,'Kyrgyzstan',KGZ')
insert into Country values(	122,'Lao People's Democratic Republic (the)',LAO')
insert into Country values(	123,'Latvia',LVA')
insert into Country values(	124,'Lebanon',LBN')
insert into Country values(	125,'Lesotho',LSO')
insert into Country values(	126,'Liberia',LBR')
insert into Country values(	127,'Libya',LBY')
insert into Country values(	128,'Liechtenstein',LIE')
insert into Country values(	129,'Lithuania',LTU')
insert into Country values(	130,'Luxembourg',LUX')
insert into Country values(	131,'Macao',MAC')
insert into Country values(	132,'Madagascar',MDG')
insert into Country values(	133,'Malawi',MWI')
insert into Country values(	134,'Malaysia',MYS')
insert into Country values(	135,'Maldives',MDV')
insert into Country values(	136,'Mali',MLI')
insert into Country values(	137,'Malta',MLT')
insert into Country values(	138,'Marshall Islands (the)',MHL')
insert into Country values(	139,'Martinique',MTQ')
insert into Country values(	140,'Mauritania',MRT')
insert into Country values(	141,'Mauritius',MUS')
insert into Country values(	142,'Mayotte',MYT')
insert into Country values(	143,'Mexico',MEX')
insert into Country values(	144,'Micronesia (Federated States of)',FSM')
insert into Country values(	145,'Moldova (the Republic of)',MDA')
insert into Country values(	146,'Monaco',MCO')
insert into Country values(	147,'Mongolia',MNG')
insert into Country values(	148,'Montenegro',MNE')
insert into Country values(	149,'Montserrat',MSR')
insert into Country values(	150,'Morocco',MAR')
insert into Country values(	151,'Mozambique',MOZ')
insert into Country values(	152,'Myanmar',MMR')
insert into Country values(	153,'Namibia',NAM')
insert into Country values(	154,'Nauru',NRU')
insert into Country values(	155,'Nepal',NPL')
insert into Country values(	156,'Netherlands (the)',NLD')
insert into Country values(	157,'New Caledonia',NCL')
insert into Country values(	158,'New Zealand',NZL')
insert into Country values(	159,'Nicaragua',NIC')
insert into Country values(	160,'Niger (the)',NER')
insert into Country values(	161,'Nigeria',NGA')
insert into Country values(	162,'Niue',NIU')
insert into Country values(	163,'Norfolk Island',NFK')
insert into Country values(	164,'Northern Mariana Islands (the)',MNP')
insert into Country values(	165,'Norway',NOR')
insert into Country values(	166,'Oman',OMN')
insert into Country values(	167,'Pakistan',PAK')
insert into Country values(	168,'Palau',PLW')
insert into Country values(	169,'Palestine, State of',PSE')
insert into Country values(	170,'Panama',PAN')
insert into Country values(	171,'Papua New Guinea',PNG')
insert into Country values(	172,'Paraguay',PRY')
insert into Country values(	173,'Peru',PER')
insert into Country values(	174,'Philippines (the)',PHL')
insert into Country values(	175,'Pitcairn',PCN')
insert into Country values(	176,'Poland',POL')
insert into Country values(	177,'Portugal',PRT')
insert into Country values(	178,'Puerto Rico',PRI')
insert into Country values(	179,'Qatar',QAT')
insert into Country values(	180,'Republic of North Macedonia',MKD')
insert into Country values(	181,'Romania',ROU')
insert into Country values(	182,'Russian Federation (the)',RUS')
insert into Country values(	183,'Rwanda',RWA')
insert into Country values(	184,'Réunion',REU')
insert into Country values(	185,'Saint Barthélemy',BLM')
insert into Country values(	186,'Saint Helena, Ascension and Tristan da Cunha',SHN')
insert into Country values(	187,'Saint Kitts and Nevis',KNA')
insert into Country values(	188,'Saint Lucia',LCA')
insert into Country values(	189,'Saint Martin (French part)',MAF')
insert into Country values(	190,'Saint Pierre and Miquelon',SPM')
insert into Country values(	191,'Saint Vincent and the Grenadines',VCT')
insert into Country values(	192,'Samoa',WSM')
insert into Country values(	193,'San Marino',SMR')
insert into Country values(	194,'Sao Tome and Principe',STP')
insert into Country values(	195,'Saudi Arabia',SAU')
insert into Country values(	196,'Senegal',SEN')
insert into Country values(	197,'Serbia',SRB')
insert into Country values(	198,'Seychelles',SYC')
insert into Country values(	199,'Sierra Leone',SLE')
insert into Country values(	200,'Singapore',SGP')
insert into Country values(	201,'Sint Maarten (Dutch part)',SXM')
insert into Country values(	202,'Slovakia',SVK')
insert into Country values(	203,'Slovenia',SVN')
insert into Country values(	204,'Solomon Islands',SLB')
insert into Country values(	205,'Somalia',SOM')
insert into Country values(	206,'South Africa',ZAF')
insert into Country values(	207,'South Georgia and the South Sandwich Islands',SGS')
insert into Country values(	208,'South Sudan',SSD')
insert into Country values(	209,'Spain',ESP')
insert into Country values(	210,'Sri Lanka',LKA')
insert into Country values(	211,'Sudan (the)',SDN')
insert into Country values(	212,'Suriname',SUR')
insert into Country values(	213,'Svalbard and Jan Mayen',SJM')
insert into Country values(	214,'Sweden',SWE')
insert into Country values(	215,'Switzerland',CHE')
insert into Country values(	216,'Syrian Arab Republic',SYR')
insert into Country values(	217,'Taiwan (Province of China)',TWN')
insert into Country values(	218,'Tajikistan',TJK')
insert into Country values(	219,'Tanzania, United Republic of',TZA')
insert into Country values(	220,'Thailand',THA')
insert into Country values(	221,'Timor-Leste',TLS')
insert into Country values(	222,'Togo',TGO')
insert into Country values(	223,'Tokelau',TKL')
insert into Country values(	224,'Tonga',TON')
insert into Country values(	225,'Trinidad and Tobago',TTO')
insert into Country values(	226,'Tunisia',TUN')
insert into Country values(	227,'Turkey',TUR')
insert into Country values(	228,'Turkmenistan',TKM')
insert into Country values(	229,'Turks and Caicos Islands (the)',TCA')
insert into Country values(	230,'Tuvalu',TUV')
insert into Country values(	231,'Uganda',UGA')
insert into Country values(	232,'Ukraine',UKR')
insert into Country values(	233,'United Arab Emirates (the)',ARE')
insert into Country values(	234,'United Kingdom of Great Britain and Northern Ireland (the)',GBR')
insert into Country values(	235,'United States Minor Outlying Islands (the)',UMI')
insert into Country values(	236,'United States of America (the)',USA')
insert into Country values(	237,'Uruguay',URY')
insert into Country values(	238,'Uzbekistan',UZB')
insert into Country values(	239,'Vanuatu',VUT')
insert into Country values(	240,'Venezuela (Bolivarian Republic of)',VEN')
insert into Country values(	241,'Viet Nam',VNM')
insert into Country values(	242,'Virgin Islands (British)',VGB')
insert into Country values(	243,'Virgin Islands (U.S.)',VIR')
insert into Country values(	244,'Wallis and Futuna',WLF')
insert into Country values(	245,'Western Sahara',ESH')
insert into Country values(	246,'Yemen',YEM')
insert into Country values(	247,'Zambia',ZMB')
insert into Country values(	248,'Zimbabwe',ZWE')
insert into Country values(	249,'Åland Islands',ALA') [42001-214]
2022-12-22 03:30:40 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(\0009249,'Åland Islands',ALA[*]')"; SQL statement:
insert into Country values(	249,'Åland Islands',ALA') [42000-214]
2022-12-22 03:32:19 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(\00091,'Afghanistan','AFG')\000d\000ainsert into Country values(\00092,'Albania','ALB')\000d\000ainsert into Country values(\00093,'Algeria','DZA')\000d\000ainsert into Country values(\00094,'American Samoa','ASM')\000d\000ainsert into Country values(\00095,'Andorra','AND')\000d\000ainsert into Country values(\00096,'Angola','AGO')\000d\000ainsert into Country values(\00097,'Anguilla','AIA')\000d\000ainsert into Country values(\00098,'Antarctica','ATA')\000d\000ainsert into Country values(\00099,'Antigua and Barbuda','ATG')\000d\000ainsert into Country values(\000910,'Argentina','ARG')\000d\000ainsert into Country values(\000911,'Armenia','ARM')\000d\000ainsert into Country values(\000912,'Aruba','ABW')\000d\000ainsert into Country values(\000913,'Australia','AUS')\000d\000ainsert into Country values(\000914,'Austria','AUT')\000d\000ainsert into Country values(\000915,'Azerbaijan','AZE')\000d\000ainsert into Country values(\000916,'Bahamas (the)','BHS')\000d\000ainsert into Country values(\000917,'Bahrain','BHR')\000d\000ainsert into Country values(\000918,'Bangladesh','BGD')\000d\000ainsert into Country values(\000919,'Barbados','BRB')\000d\000ainsert into Country values(\000920,'Belarus','BLR')\000d\000ainsert into Country values(\000921,'Belgium','BEL')\000d\000ainsert into Country values(\000922,'Belize','BLZ')\000d\000ainsert into Country values(\000923,'Benin','BEN')\000d\000ainsert into Country values(\000924,'Bermuda','BMU')\000d\000ainsert into Country values(\000925,'Bhutan','BTN')\000d\000ainsert into Country values(\000926,'Bolivia (Plurinational State of)','BOL')\000d\000ainsert into Country values(\000927,'Bonaire, Sint Eustatius and Saba','BES')\000d\000ainsert into Country values(\000928,'Bosnia and Herzegovina','BIH')\000d\000ainsert into Country values(\000929,'Botswana','BWA')\000d\000ainsert into Country values(\000930,'Bouvet Island','BVT')\000d\000ainsert into Country values(\000931,'Brazil','BRA')\000d\000ainsert into Country values(\000932,'British Indian Ocean Territory (the)','IOT')\000d\000ainsert into Country values(\000933,'Brunei Darussalam','BRN')\000d\000ainsert into Country values(\000934,'Bulgaria','BGR')\000d\000ainsert into Country values(\000935,'Burkina Faso','BFA')\000d\000ainsert into Country values(\000936,'Burundi','BDI')\000d\000ainsert into Country values(\000937,'Cabo Verde','CPV')\000d\000ainsert into Country values(\000938,'Cambodia','KHM')\000d\000ainsert into Country values(\000939,'Cameroon','CMR')\000d\000ainsert into Country values(\000940,'Canada','CAN')\000d\000ainsert into Country values(\000941,'Cayman Islands (the)','CYM')\000d\000ainsert into Country values(\000942,'Central African Republic (the)','CAF')\000d\000ainsert into Country values(\000943,'Chad','TCD')\000d\000ainsert into Country values(\000944,'Chile','CHL')\000d\000ainsert into Country values(\000945,'China','CHN')\000d\000ainsert into Country values(\000946,'Christmas Island','CXR')\000d\000ainsert into Country values(\000947,'Cocos (Keeling) Islands (the)','CCK')\000d\000ainsert into Country values(\000948,'Colombia','COL')\000d\000ainsert into Country values(\000949,'Comoros (the)','COM')\000d\000ainsert into Country values(\000950,'Congo (the Democratic Republic of the)','COD')\000d\000ainsert into Country values(\000951,'Congo (the)','COG')\000d\000ainsert into Country values(\000952,'Cook Islands (the)','COK')\000d\000ainsert into Country values(\000953,'Costa Rica','CRI')\000d\000ainsert into Country values(\000954,'Croatia','HRV')\000d\000ainsert into Country values(\000955,'Cuba','CUB')\000d\000ainsert into Country values(\000956,'Curaçao','CUW')\000d\000ainsert into Country values(\000957,'Cyprus','CYP')\000d\000ainsert into Country values(\000958,'Czechia','CZE')\000d\000ainsert into Country values(\000959,'Côte d'Ivoire','CIV')\000d\000ainsert into Country values(\000960,'Denmark','DNK')\000d\000ainsert into Country values(\000961,'Djibouti','DJI')\000d\000ainsert into Country values(\000962,'Dominica','DMA')\000d\000ainsert into Country values(\000963,'Dominican Republic (the)','DOM')\000d\000ainsert into Country values(\000964,'Ecuador','ECU')\000d\000ainsert into Country values(\000965,'Egypt','EGY')\000d\000ainsert into Country values(\000966,'El Salvador','SLV')\000d\000ainsert into Country values(\000967,'Equatorial Guinea','GNQ')\000d\000ainsert into Country values(\000968,'Eritrea','ERI')\000d\000ainsert into Country values(\000969,'Estonia','EST')\000d\000ainsert into Country values(\000970,'Eswatini','SWZ')\000d\000ainsert into Country values(\000971,'Ethiopia','ETH')\000d\000ainsert into Country values(\000972,'Falkland Islands (the) [Malvinas]','FLK')\000d\000ainsert into Country values(\000973,'Faroe Islands (the)','FRO')\000d\000ainsert into Country values(\000974,'Fiji','FJI')\000d\000ainsert into Country values(\000975,'Finland','FIN')\000d\000ainsert into Country values(\000976,'France','FRA')\000d\000ainsert into Country values(\000977,'French Guiana','GUF')\000d\000ainsert into Country values(\000978,'French Polynesia','PYF')\000d\000ainsert into Country values(\000979,'French Southern Territories (the)','ATF')\000d\000ainsert into Country values(\000980,'Gabon','GAB')\000d\000ainsert into Country values(\000981,'Gambia (the)','GMB')\000d\000ainsert into Country values(\000982,'Georgia','GEO')\000d\000ainsert into Country values(\000983,'Germany','DEU')\000d\000ainsert into Country values(\000984,'Ghana','GHA')\000d\000ainsert into Country values(\000985,'Gibraltar','GIB')\000d\000ainsert into Country values(\000986,'Greece','GRC')\000d\000ainsert into Country values(\000987,'Greenland','GRL')\000d\000ainsert into Country values(\000988,'Grenada','GRD')\000d\000ainsert into Country values(\000989,'Guadeloupe','GLP')\000d\000ainsert into Country values(\000990,'Guam','GUM')\000d\000ainsert into Country values(\000991,'Guatemala','GTM')\000d\000ainsert into Country values(\000992,'Guernsey','GGY')\000d\000ainsert into Country values(\000993,'Guinea','GIN')\000d\000ainsert into Country values(\000994,'Guinea-Bissau','GNB')\000d\000ainsert into Country values(\000995,'Guyana','GUY')\000d\000ainsert into Country values(\000996,'Haiti','HTI')\000d\000ainsert into Country values(\000997,'Heard Island and McDonald Islands','HMD')\000d\000ainsert into Country values(\000998,'Holy See (the)','VAT')\000d\000ainsert into Country values(\000999,'Honduras','HND')\000d\000ainsert into Country values(\0009100,'Hong Kong','HKG')\000d\000ainsert into Country values(\0009101,'Hungary','HUN')\000d\000ainsert into Country values(\0009102,'Iceland','ISL')\000d\000ainsert into Country values(\0009103,'India','IND')\000d\000ainsert into Country values(\0009104,'Indonesia','IDN')\000d\000ainsert into Country values(\0009105,'Iran (Islamic Republic of)','IRN')\000d\000ainsert into Country values(\0009106,'Iraq','IRQ')\000d\000ainsert into Country values(\0009107,'Ireland','IRL')\000d\000ainsert into Country values(\0009108,'Isle of Man','IMN')\000d\000ainsert into Country values(\0009109,'Israel','ISR')\000d\000ainsert into Country values(\0009110,'Italy','ITA')\000d\000ainsert into Country values(\0009111,'Jamaica','JAM')\000d\000ainsert into Country values(\0009112,'Japan','JPN')\000d\000ainsert into Country values(\0009113,'Jersey','JEY')\000d\000ainsert into Country values(\0009114,'Jordan','JOR')\000d\000ainsert into Country values(\0009115,'Kazakhstan','KAZ')\000d\000ainsert into Country values(\0009116,'Kenya','KEN')\000d\000ainsert into Country values(\0009117,'Kiribati','KIR')\000d\000ainsert into Country values(\0009118,'Korea (the Democratic People's Republic of)','PRK')\000d\000ainsert into Country values(\0009119,'Korea (the Republic of)','KOR')\000d\000ainsert into Country values(\0009120,'Kuwait','KWT')\000d\000ainsert into Country values(\0009121,'Kyrgyzstan','KGZ')\000d\000ainsert into Country values(\0009122,'Lao People's Democratic Republic (the)','LAO')\000d\000ainsert into Country values(\0009123,'Latvia','LVA')\000d\000ainsert into Country values(\0009124,'Lebanon','LBN')\000d\000ainsert into Country values(\0009125,'Lesotho','LSO')\000d\000ainsert into Country values(\0009126,'Liberia','LBR')\000d\000ainsert into Country values(\0009127,'Libya','LBY')\000d\000ainsert into Country values(\0009128,'Liechtenstein','LIE')\000d\000ainsert into Country values(\0009129,'Lithuania','LTU')\000d\000ainsert into Country values(\0009130,'Luxembourg','LUX')\000d\000ainsert into Country values(\0009131,'Macao','MAC')\000d\000ainsert into Country values(\0009132,'Madagascar','MDG')\000d\000ainsert into Country values(\0009133,'Malawi','MWI')\000d\000ainsert into Country values(\0009134,'Malaysia','MYS')\000d\000ainsert into Country values(\0009135,'Maldives','MDV')\000d\000ainsert into Country values(\0009136,'Mali','MLI')\000d\000ainsert into Country values(\0009137,'Malta','MLT')\000d\000ainsert into Country values(\0009138,'Marshall Islands (the)','MHL')\000d\000ainsert into Country values(\0009139,'Martinique','MTQ')\000d\000ainsert into Country values(\0009140,'Mauritania','MRT')\000d\000ainsert into Country values(\0009141,'Mauritius','MUS')\000d\000ainsert into Country values(\0009142,'Mayotte','MYT')\000d\000ainsert into Country values(\0009143,'Mexico','MEX')\000d\000ainsert into Country values(\0009144,'Micronesia (Federated States of)','FSM')\000d\000ainsert into Country values(\0009145,'Moldova (the Republic of)','MDA')\000d\000ainsert into Country values(\0009146,'Monaco','MCO')\000d\000ainsert into Country values(\0009147,'Mongolia','MNG')\000d\000ainsert into Country values(\0009148,'Montenegro','MNE')\000d\000ainsert into Country values(\0009149,'Montserrat','MSR')\000d\000ainsert into Country values(\0009150,'Morocco','MAR')\000d\000ainsert into Country values(\0009151,'Mozambique','MOZ')\000d\000ainsert into Country values(\0009152,'Myanmar','MMR')\000d\000ainsert into Country values(\0009153,'Namibia','NAM')\000d\000ainsert into Country values(\0009154,'Nauru','NRU')\000d\000ainsert into Country values(\0009155,'Nepal','NPL')\000d\000ainsert into Country values(\0009156,'Netherlands (the)','NLD')\000d\000ainsert into Country values(\0009157,'New Caledonia','NCL')\000d\000ainsert into Country values(\0009158,'New Zealand','NZL')\000d\000ainsert into Country values(\0009159,'Nicaragua','NIC')\000d\000ainsert into Country values(\0009160,'Niger (the)','NER')\000d\000ainsert into Country values(\0009161,'Nigeria','NGA')\000d\000ainsert into Country values(\0009162,'Niue','NIU')\000d\000ainsert into Country values(\0009163,'Norfolk Island','NFK')\000d\000ainsert into Country values(\0009164,'Northern Mariana Islands (the)','MNP')\000d\000ainsert into Country values(\0009165,'Norway','NOR')\000d\000ainsert into Country values(\0009166,'Oman','OMN')\000d\000ainsert into Country values(\0009167,'Pakistan','PAK')\000d\000ainsert into Country values(\0009168,'Palau','PLW')\000d\000ainsert into Country values(\0009169,'Palestine, State of','PSE')\000d\000ainsert into Country values(\0009170,'Panama','PAN')\000d\000ainsert into Country values(\0009171,'Papua New Guinea','PNG')\000d\000ainsert into Country values(\0009172,'Paraguay','PRY')\000d\000ainsert into Country values(\0009173,'Peru','PER')\000d\000ainsert into Country values(\0009174,'Philippines (the)','PHL')\000d\000ainsert into Country values(\0009175,'Pitcairn','PCN')\000d\000ainsert into Country values(\0009176,'Poland','POL')\000d\000ainsert into Country values(\0009177,'Portugal','PRT')\000d\000ainsert into Country values(\0009178,'Puerto Rico','PRI')\000d\000ainsert into Country values(\0009179,'Qatar','QAT')\000d\000ainsert into Country values(\0009180,'Republic of North Macedonia','MKD')\000d\000ainsert into Country values(\0009181,'Romania','ROU')\000d\000ainsert into Country values(\0009182,'Russian Federation (the)','RUS')\000d\000ainsert into Country values(\0009183,'Rwanda','RWA')\000d\000ainsert into Country values(\0009184,'Réunion','REU')\000d\000ainsert into Country values(\0009185,'Saint Barthélemy','BLM')\000d\000ainsert into Country values(\0009186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000ainsert into Country values(\0009187,'Saint Kitts and Nevis','KNA')\000d\000ainsert into Country values(\0009188,'Saint Lucia','LCA')\000d\000ainsert into Country values(\0009189,'Saint Martin (French part)','MAF')\000d\000ainsert into Country values(\0009190,'Saint Pierre and Miquelon','SPM')\000d\000ainsert into Country values(\0009191,'Saint Vincent and the Grenadines','VCT')\000d\000ainsert into Country values(\0009192,'Samoa','WSM')\000d\000ainsert into Country values(\0009193,'San Marino','SMR')\000d\000ainsert into Country values(\0009194,'Sao Tome and Principe','STP')\000d\000ainsert into Country values(\0009195,'Saudi Arabia','SAU')\000d\000ainsert into Country values(\0009196,'Senegal','SEN')\000d\000ainsert into Country values(\0009197,'Serbia','SRB')\000d\000ainsert into Country values(\0009198,'Seychelles','SYC')\000d\000ainsert into Country values(\0009199,'Sierra Leone','SLE')\000d\000ainsert into Country values(\0009200,'Singapore','SGP')\000d\000ainsert into Country values(\0009201,'Sint Maarten (Dutch part)','SXM')\000d\000ainsert into Country values(\0009202,'Slovakia','SVK')\000d\000ainsert into Country values(\0009203,'Slovenia','SVN')\000d\000ainsert into Country values(\0009204,'Solomon Islands','SLB')\000d\000ainsert into Country values(\0009205,'Somalia','SOM')\000d\000ainsert into Country values(\0009206,'South Africa','ZAF')\000d\000ainsert into Country values(\0009207,'South Georgia and the South Sandwich Islands','SGS')\000d\000ainsert into Country values(\0009208,'South Sudan','SSD')\000d\000ainsert into Country values(\0009209,'Spain','ESP')\000d\000ainsert into Country values(\0009210,'Sri Lanka','LKA')\000d\000ainsert into Country values(\0009211,'Sudan (the)','SDN')\000d\000ainsert into Country values(\0009212,'Suriname','SUR')\000d\000ainsert into Country values(\0009213,'Svalbard and Jan Mayen','SJM')\000d\000ainsert into Country values(\0009214,'Sweden','SWE')\000d\000ainsert into Country values(\0009215,'Switzerland','CHE')\000d\000ainsert into Country values(\0009216,'Syrian Arab Republic','SYR')\000d\000ainsert into Country values(\0009217,'Taiwan (Province of China)','TWN')\000d\000ainsert into Country values(\0009218,'Tajikistan','TJK')\000d\000ainsert into Country values(\0009219,'Tanzania, United Republic of','TZA')\000d\000ainsert into Country values(\0009220,'Thailand','THA')\000d\000ainsert into Country values(\0009221,'Timor-Leste','TLS')\000d\000ainsert into Country values(\0009222,'Togo','TGO')\000d\000ainsert into Country values(\0009223,'Tokelau','TKL')\000d\000ainsert into Country values(\0009224,'Tonga','TON')\000d\000ainsert into Country values(\0009225,'Trinidad and Tobago','TTO')\000d\000ainsert into Country values(\0009226,'Tunisia','TUN')\000d\000ainsert into Country values(\0009227,'Turkey','TUR')\000d\000ainsert into Country values(\0009228,'Turkmenistan','TKM')\000d\000ainsert into Country values(\0009229,'Turks and Caicos Islands (the)','TCA')\000d\000ainsert into Country values(\0009230,'Tuvalu','TUV')\000d\000ainsert into Country values(\0009231,'Uganda','UGA')\000d\000ainsert into Country values(\0009232,'Ukraine','UKR')\000d\000ainsert into Country values(\0009233,'United Arab Emirates (the)','ARE')\000d\000ainsert into Country values(\0009234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')\000d\000ainsert into Country values(\0009235,'United States Minor Outlying Islands (the)','UMI')\000d\000ainsert into Country values(\0009236,'United States of America (the)','USA')\000d\000ainsert into Country values(\0009237,'Uruguay','URY')\000d\000ainsert into Country values(\0009238,'Uzbekistan','UZB')\000d\000ainsert into Country values(\0009239,'Vanuatu','VUT')\000d\000ainsert into Country values(\0009240,'Venezuela (Bolivarian Republic of)','VEN')\000d\000ainsert into Country values(\0009241,'Viet Nam','VNM')\000d\000ainsert into Country values(\0009242,'Virgin Islands (British)','VGB')\000d\000ainsert into Country values(\0009243,'Virgin Islands (U.S.)','VIR')\000d\000ainsert into Country values(\0009244,'Wallis and Futuna','WLF')\000d\000ainsert into Country values(\0009245,'Western Sahara','ESH')\000d\000ainsert into Country values(\0009246,'Yemen','YEM')\000d\000ainsert into Country values(\0009247,'Zambia','ZMB')\000d\000ainsert into Country values(\0009248,'Zimbabwe','ZWE[*]')"; SQL statement:
insert into Country values(	1,'Afghanistan','AFG')
insert into Country values(	2,'Albania','ALB')
insert into Country values(	3,'Algeria','DZA')
insert into Country values(	4,'American Samoa','ASM')
insert into Country values(	5,'Andorra','AND')
insert into Country values(	6,'Angola','AGO')
insert into Country values(	7,'Anguilla','AIA')
insert into Country values(	8,'Antarctica','ATA')
insert into Country values(	9,'Antigua and Barbuda','ATG')
insert into Country values(	10,'Argentina','ARG')
insert into Country values(	11,'Armenia','ARM')
insert into Country values(	12,'Aruba','ABW')
insert into Country values(	13,'Australia','AUS')
insert into Country values(	14,'Austria','AUT')
insert into Country values(	15,'Azerbaijan','AZE')
insert into Country values(	16,'Bahamas (the)','BHS')
insert into Country values(	17,'Bahrain','BHR')
insert into Country values(	18,'Bangladesh','BGD')
insert into Country values(	19,'Barbados','BRB')
insert into Country values(	20,'Belarus','BLR')
insert into Country values(	21,'Belgium','BEL')
insert into Country values(	22,'Belize','BLZ')
insert into Country values(	23,'Benin','BEN')
insert into Country values(	24,'Bermuda','BMU')
insert into Country values(	25,'Bhutan','BTN')
insert into Country values(	26,'Bolivia (Plurinational State of)','BOL')
insert into Country values(	27,'Bonaire, Sint Eustatius and Saba','BES')
insert into Country values(	28,'Bosnia and Herzegovina','BIH')
insert into Country values(	29,'Botswana','BWA')
insert into Country values(	30,'Bouvet Island','BVT')
insert into Country values(	31,'Brazil','BRA')
insert into Country values(	32,'British Indian Ocean Territory (the)','IOT')
insert into Country values(	33,'Brunei Darussalam','BRN')
insert into Country values(	34,'Bulgaria','BGR')
insert into Country values(	35,'Burkina Faso','BFA')
insert into Country values(	36,'Burundi','BDI')
insert into Country values(	37,'Cabo Verde','CPV')
insert into Country values(	38,'Cambodia','KHM')
insert into Country values(	39,'Cameroon','CMR')
insert into Country values(	40,'Canada','CAN')
insert into Country values(	41,'Cayman Islands (the)','CYM')
insert into Country values(	42,'Central African Republic (the)','CAF')
insert into Country values(	43,'Chad','TCD')
insert into Country values(	44,'Chile','CHL')
insert into Country values(	45,'China','CHN')
insert into Country values(	46,'Christmas Island','CXR')
insert into Country values(	47,'Cocos (Keeling) Islands (the)','CCK')
insert into Country values(	48,'Colombia','COL')
insert into Country values(	49,'Comoros (the)','COM')
insert into Country values(	50,'Congo (the Democratic Republic of the)','COD')
insert into Country values(	51,'Congo (the)','COG')
insert into Country values(	52,'Cook Islands (the)','COK')
insert into Country values(	53,'Costa Rica','CRI')
insert into Country values(	54,'Croatia','HRV')
insert into Country values(	55,'Cuba','CUB')
insert into Country values(	56,'Curaçao','CUW')
insert into Country values(	57,'Cyprus','CYP')
insert into Country values(	58,'Czechia','CZE')
insert into Country values(	59,'Côte d'Ivoire','CIV')
insert into Country values(	60,'Denmark','DNK')
insert into Country values(	61,'Djibouti','DJI')
insert into Country values(	62,'Dominica','DMA')
insert into Country values(	63,'Dominican Republic (the)','DOM')
insert into Country values(	64,'Ecuador','ECU')
insert into Country values(	65,'Egypt','EGY')
insert into Country values(	66,'El Salvador','SLV')
insert into Country values(	67,'Equatorial Guinea','GNQ')
insert into Country values(	68,'Eritrea','ERI')
insert into Country values(	69,'Estonia','EST')
insert into Country values(	70,'Eswatini','SWZ')
insert into Country values(	71,'Ethiopia','ETH')
insert into Country values(	72,'Falkland Islands (the) [Malvinas]','FLK')
insert into Country values(	73,'Faroe Islands (the)','FRO')
insert into Country values(	74,'Fiji','FJI')
insert into Country values(	75,'Finland','FIN')
insert into Country values(	76,'France','FRA')
insert into Country values(	77,'French Guiana','GUF')
insert into Country values(	78,'French Polynesia','PYF')
insert into Country values(	79,'French Southern Territories (the)','ATF')
insert into Country values(	80,'Gabon','GAB')
insert into Country values(	81,'Gambia (the)','GMB')
insert into Country values(	82,'Georgia','GEO')
insert into Country values(	83,'Germany','DEU')
insert into Country values(	84,'Ghana','GHA')
insert into Country values(	85,'Gibraltar','GIB')
insert into Country values(	86,'Greece','GRC')
insert into Country values(	87,'Greenland','GRL')
insert into Country values(	88,'Grenada','GRD')
insert into Country values(	89,'Guadeloupe','GLP')
insert into Country values(	90,'Guam','GUM')
insert into Country values(	91,'Guatemala','GTM')
insert into Country values(	92,'Guernsey','GGY')
insert into Country values(	93,'Guinea','GIN')
insert into Country values(	94,'Guinea-Bissau','GNB')
insert into Country values(	95,'Guyana','GUY')
insert into Country values(	96,'Haiti','HTI')
insert into Country values(	97,'Heard Island and McDonald Islands','HMD')
insert into Country values(	98,'Holy See (the)','VAT')
insert into Country values(	99,'Honduras','HND')
insert into Country values(	100,'Hong Kong','HKG')
insert into Country values(	101,'Hungary','HUN')
insert into Country values(	102,'Iceland','ISL')
insert into Country values(	103,'India','IND')
insert into Country values(	104,'Indonesia','IDN')
insert into Country values(	105,'Iran (Islamic Republic of)','IRN')
insert into Country values(	106,'Iraq','IRQ')
insert into Country values(	107,'Ireland','IRL')
insert into Country values(	108,'Isle of Man','IMN')
insert into Country values(	109,'Israel','ISR')
insert into Country values(	110,'Italy','ITA')
insert into Country values(	111,'Jamaica','JAM')
insert into Country values(	112,'Japan','JPN')
insert into Country values(	113,'Jersey','JEY')
insert into Country values(	114,'Jordan','JOR')
insert into Country values(	115,'Kazakhstan','KAZ')
insert into Country values(	116,'Kenya','KEN')
insert into Country values(	117,'Kiribati','KIR')
insert into Country values(	118,'Korea (the Democratic People's Republic of)','PRK')
insert into Country values(	119,'Korea (the Republic of)','KOR')
insert into Country values(	120,'Kuwait','KWT')
insert into Country values(	121,'Kyrgyzstan','KGZ')
insert into Country values(	122,'Lao People's Democratic Republic (the)','LAO')
insert into Country values(	123,'Latvia','LVA')
insert into Country values(	124,'Lebanon','LBN')
insert into Country values(	125,'Lesotho','LSO')
insert into Country values(	126,'Liberia','LBR')
insert into Country values(	127,'Libya','LBY')
insert into Country values(	128,'Liechtenstein','LIE')
insert into Country values(	129,'Lithuania','LTU')
insert into Country values(	130,'Luxembourg','LUX')
insert into Country values(	131,'Macao','MAC')
insert into Country values(	132,'Madagascar','MDG')
insert into Country values(	133,'Malawi','MWI')
insert into Country values(	134,'Malaysia','MYS')
insert into Country values(	135,'Maldives','MDV')
insert into Country values(	136,'Mali','MLI')
insert into Country values(	137,'Malta','MLT')
insert into Country values(	138,'Marshall Islands (the)','MHL')
insert into Country values(	139,'Martinique','MTQ')
insert into Country values(	140,'Mauritania','MRT')
insert into Country values(	141,'Mauritius','MUS')
insert into Country values(	142,'Mayotte','MYT')
insert into Country values(	143,'Mexico','MEX')
insert into Country values(	144,'Micronesia (Federated States of)','FSM')
insert into Country values(	145,'Moldova (the Republic of)','MDA')
insert into Country values(	146,'Monaco','MCO')
insert into Country values(	147,'Mongolia','MNG')
insert into Country values(	148,'Montenegro','MNE')
insert into Country values(	149,'Montserrat','MSR')
insert into Country values(	150,'Morocco','MAR')
insert into Country values(	151,'Mozambique','MOZ')
insert into Country values(	152,'Myanmar','MMR')
insert into Country values(	153,'Namibia','NAM')
insert into Country values(	154,'Nauru','NRU')
insert into Country values(	155,'Nepal','NPL')
insert into Country values(	156,'Netherlands (the)','NLD')
insert into Country values(	157,'New Caledonia','NCL')
insert into Country values(	158,'New Zealand','NZL')
insert into Country values(	159,'Nicaragua','NIC')
insert into Country values(	160,'Niger (the)','NER')
insert into Country values(	161,'Nigeria','NGA')
insert into Country values(	162,'Niue','NIU')
insert into Country values(	163,'Norfolk Island','NFK')
insert into Country values(	164,'Northern Mariana Islands (the)','MNP')
insert into Country values(	165,'Norway','NOR')
insert into Country values(	166,'Oman','OMN')
insert into Country values(	167,'Pakistan','PAK')
insert into Country values(	168,'Palau','PLW')
insert into Country values(	169,'Palestine, State of','PSE')
insert into Country values(	170,'Panama','PAN')
insert into Country values(	171,'Papua New Guinea','PNG')
insert into Country values(	172,'Paraguay','PRY')
insert into Country values(	173,'Peru','PER')
insert into Country values(	174,'Philippines (the)','PHL')
insert into Country values(	175,'Pitcairn','PCN')
insert into Country values(	176,'Poland','POL')
insert into Country values(	177,'Portugal','PRT')
insert into Country values(	178,'Puerto Rico','PRI')
insert into Country values(	179,'Qatar','QAT')
insert into Country values(	180,'Republic of North Macedonia','MKD')
insert into Country values(	181,'Romania','ROU')
insert into Country values(	182,'Russian Federation (the)','RUS')
insert into Country values(	183,'Rwanda','RWA')
insert into Country values(	184,'Réunion','REU')
insert into Country values(	185,'Saint Barthélemy','BLM')
insert into Country values(	186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
insert into Country values(	187,'Saint Kitts and Nevis','KNA')
insert into Country values(	188,'Saint Lucia','LCA')
insert into Country values(	189,'Saint Martin (French part)','MAF')
insert into Country values(	190,'Saint Pierre and Miquelon','SPM')
insert into Country values(	191,'Saint Vincent and the Grenadines','VCT')
insert into Country values(	192,'Samoa','WSM')
insert into Country values(	193,'San Marino','SMR')
insert into Country values(	194,'Sao Tome and Principe','STP')
insert into Country values(	195,'Saudi Arabia','SAU')
insert into Country values(	196,'Senegal','SEN')
insert into Country values(	197,'Serbia','SRB')
insert into Country values(	198,'Seychelles','SYC')
insert into Country values(	199,'Sierra Leone','SLE')
insert into Country values(	200,'Singapore','SGP')
insert into Country values(	201,'Sint Maarten (Dutch part)','SXM')
insert into Country values(	202,'Slovakia','SVK')
insert into Country values(	203,'Slovenia','SVN')
insert into Country values(	204,'Solomon Islands','SLB')
insert into Country values(	205,'Somalia','SOM')
insert into Country values(	206,'South Africa','ZAF')
insert into Country values(	207,'South Georgia and the South Sandwich Islands','SGS')
insert into Country values(	208,'South Sudan','SSD')
insert into Country values(	209,'Spain','ESP')
insert into Country values(	210,'Sri Lanka','LKA')
insert into Country values(	211,'Sudan (the)','SDN')
insert into Country values(	212,'Suriname','SUR')
insert into Country values(	213,'Svalbard and Jan Mayen','SJM')
insert into Country values(	214,'Sweden','SWE')
insert into Country values(	215,'Switzerland','CHE')
insert into Country values(	216,'Syrian Arab Republic','SYR')
insert into Country values(	217,'Taiwan (Province of China)','TWN')
insert into Country values(	218,'Tajikistan','TJK')
insert into Country values(	219,'Tanzania, United Republic of','TZA')
insert into Country values(	220,'Thailand','THA')
insert into Country values(	221,'Timor-Leste','TLS')
insert into Country values(	222,'Togo','TGO')
insert into Country values(	223,'Tokelau','TKL')
insert into Country values(	224,'Tonga','TON')
insert into Country values(	225,'Trinidad and Tobago','TTO')
insert into Country values(	226,'Tunisia','TUN')
insert into Country values(	227,'Turkey','TUR')
insert into Country values(	228,'Turkmenistan','TKM')
insert into Country values(	229,'Turks and Caicos Islands (the)','TCA')
insert into Country values(	230,'Tuvalu','TUV')
insert into Country values(	231,'Uganda','UGA')
insert into Country values(	232,'Ukraine','UKR')
insert into Country values(	233,'United Arab Emirates (the)','ARE')
insert into Country values(	234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')
insert into Country values(	235,'United States Minor Outlying Islands (the)','UMI')
insert into Country values(	236,'United States of America (the)','USA')
insert into Country values(	237,'Uruguay','URY')
insert into Country values(	238,'Uzbekistan','UZB')
insert into Country values(	239,'Vanuatu','VUT')
insert into Country values(	240,'Venezuela (Bolivarian Republic of)','VEN')
insert into Country values(	241,'Viet Nam','VNM')
insert into Country values(	242,'Virgin Islands (British)','VGB')
insert into Country values(	243,'Virgin Islands (U.S.)','VIR')
insert into Country values(	244,'Wallis and Futuna','WLF')
insert into Country values(	245,'Western Sahara','ESH')
insert into Country values(	246,'Yemen','YEM')
insert into Country values(	247,'Zambia','ZMB')
insert into Country values(	248,'Zimbabwe','ZWE') [42000-214]
2022-12-22 03:33:02 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(\0009245,'Western Sahara','ESH')\000d\000a[*]insert into Country values(\0009246,'Yemen','YEM')"; SQL statement:
insert into Country values(	245,'Western Sahara','ESH')
insert into Country values(	246,'Yemen','YEM') [42000-214]
2022-12-22 03:34:05 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(\00091,'Afghanistan','AFG')\000d\000ainsert into Country values(\00092,'Albania','ALB')\000d\000ainsert into Country values(\00093,'Algeria','DZA')\000d\000ainsert into Country values(\00094,'American Samoa','ASM')\000d\000ainsert into Country values(\00095,'Andorra','AND')\000d\000ainsert into Country values(\00096,'Angola','AGO')\000d\000ainsert into Country values(\00097,'Anguilla','AIA')\000d\000ainsert into Country values(\00098,'Antarctica','ATA')\000d\000ainsert into Country values(\00099,'Antigua and Barbuda','ATG')\000d\000ainsert into Country values(\000910,'Argentina','ARG')\000d\000ainsert into Country values(\000911,'Armenia','ARM')\000d\000ainsert into Country values(\000912,'Aruba','ABW')\000d\000ainsert into Country values(\000913,'Australia','AUS')\000d\000ainsert into Country values(\000914,'Austria','AUT')\000d\000ainsert into Country values(\000915,'Azerbaijan','AZE')\000d\000ainsert into Country values(\000916,'Bahamas (the)','BHS')\000d\000ainsert into Country values(\000917,'Bahrain','BHR')\000d\000ainsert into Country values(\000918,'Bangladesh','BGD')\000d\000ainsert into Country values(\000919,'Barbados','BRB')\000d\000ainsert into Country values(\000920,'Belarus','BLR')\000d\000ainsert into Country values(\000921,'Belgium','BEL')\000d\000ainsert into Country values(\000922,'Belize','BLZ')\000d\000ainsert into Country values(\000923,'Benin','BEN')\000d\000ainsert into Country values(\000924,'Bermuda','BMU')\000d\000ainsert into Country values(\000925,'Bhutan','BTN')\000d\000ainsert into Country values(\000926,'Bolivia (Plurinational State of)','BOL')\000d\000ainsert into Country values(\000927,'Bonaire, Sint Eustatius and Saba','BES')\000d\000ainsert into Country values(\000928,'Bosnia and Herzegovina','BIH')\000d\000ainsert into Country values(\000929,'Botswana','BWA')\000d\000ainsert into Country values(\000930,'Bouvet Island','BVT')\000d\000ainsert into Country values(\000931,'Brazil','BRA')\000d\000ainsert into Country values(\000932,'British Indian Ocean Territory (the)','IOT')\000d\000ainsert into Country values(\000933,'Brunei Darussalam','BRN')\000d\000ainsert into Country values(\000934,'Bulgaria','BGR')\000d\000ainsert into Country values(\000935,'Burkina Faso','BFA')\000d\000ainsert into Country values(\000936,'Burundi','BDI')\000d\000ainsert into Country values(\000937,'Cabo Verde','CPV')\000d\000ainsert into Country values(\000938,'Cambodia','KHM')\000d\000ainsert into Country values(\000939,'Cameroon','CMR')\000d\000ainsert into Country values(\000940,'Canada','CAN')\000d\000ainsert into Country values(\000941,'Cayman Islands (the)','CYM')\000d\000ainsert into Country values(\000942,'Central African Republic (the)','CAF')\000d\000ainsert into Country values(\000943,'Chad','TCD')\000d\000ainsert into Country values(\000944,'Chile','CHL')\000d\000ainsert into Country values(\000945,'China','CHN')\000d\000ainsert into Country values(\000946,'Christmas Island','CXR')\000d\000ainsert into Country values(\000947,'Cocos (Keeling) Islands (the)','CCK')\000d\000ainsert into Country values(\000948,'Colombia','COL')\000d\000ainsert into Country values(\000949,'Comoros (the)','COM')\000d\000ainsert into Country values(\000950,'Congo (the Democratic Republic of the)','COD')\000d\000ainsert into Country values(\000951,'Congo (the)','COG')\000d\000ainsert into Country values(\000952,'Cook Islands (the)','COK')\000d\000ainsert into Country values(\000953,'Costa Rica','CRI')\000d\000ainsert into Country values(\000954,'Croatia','HRV')\000d\000ainsert into Country values(\000955,'Cuba','CUB')\000d\000ainsert into Country values(\000956,'Curaçao','CUW')\000d\000ainsert into Country values(\000957,'Cyprus','CYP')\000d\000ainsert into Country values(\000958,'Czechia','CZE')\000d\000ainsert into Country values(\000959,'Côte d'Ivoire','CIV')\000d\000ainsert into Country values(\000960,'Denmark','DNK')\000d\000ainsert into Country values(\000961,'Djibouti','DJI')\000d\000ainsert into Country values(\000962,'Dominica','DMA')\000d\000ainsert into Country values(\000963,'Dominican Republic (the)','DOM')\000d\000ainsert into Country values(\000964,'Ecuador','ECU')\000d\000ainsert into Country values(\000965,'Egypt','EGY')\000d\000ainsert into Country values(\000966,'El Salvador','SLV')\000d\000ainsert into Country values(\000967,'Equatorial Guinea','GNQ')\000d\000ainsert into Country values(\000968,'Eritrea','ERI')\000d\000ainsert into Country values(\000969,'Estonia','EST')\000d\000ainsert into Country values(\000970,'Eswatini','SWZ')\000d\000ainsert into Country values(\000971,'Ethiopia','ETH')\000d\000ainsert into Country values(\000972,'Falkland Islands (the) [Malvinas]','FLK')\000d\000ainsert into Country values(\000973,'Faroe Islands (the)','FRO')\000d\000ainsert into Country values(\000974,'Fiji','FJI')\000d\000ainsert into Country values(\000975,'Finland','FIN')\000d\000ainsert into Country values(\000976,'France','FRA')\000d\000ainsert into Country values(\000977,'French Guiana','GUF')\000d\000ainsert into Country values(\000978,'French Polynesia','PYF')\000d\000ainsert into Country values(\000979,'French Southern Territories (the)','ATF')\000d\000ainsert into Country values(\000980,'Gabon','GAB')\000d\000ainsert into Country values(\000981,'Gambia (the)','GMB')\000d\000ainsert into Country values(\000982,'Georgia','GEO')\000d\000ainsert into Country values(\000983,'Germany','DEU')\000d\000ainsert into Country values(\000984,'Ghana','GHA')\000d\000ainsert into Country values(\000985,'Gibraltar','GIB')\000d\000ainsert into Country values(\000986,'Greece','GRC')\000d\000ainsert into Country values(\000987,'Greenland','GRL')\000d\000ainsert into Country values(\000988,'Grenada','GRD')\000d\000ainsert into Country values(\000989,'Guadeloupe','GLP')\000d\000ainsert into Country values(\000990,'Guam','GUM')\000d\000ainsert into Country values(\000991,'Guatemala','GTM')\000d\000ainsert into Country values(\000992,'Guernsey','GGY')\000d\000ainsert into Country values(\000993,'Guinea','GIN')\000d\000ainsert into Country values(\000994,'Guinea-Bissau','GNB')\000d\000ainsert into Country values(\000995,'Guyana','GUY')\000d\000ainsert into Country values(\000996,'Haiti','HTI')\000d\000ainsert into Country values(\000997,'Heard Island and McDonald Islands','HMD')\000d\000ainsert into Country values(\000998,'Holy See (the)','VAT')\000d\000ainsert into Country values(\000999,'Honduras','HND')\000d\000ainsert into Country values(\0009100,'Hong Kong','HKG')\000d\000ainsert into Country values(\0009101,'Hungary','HUN')\000d\000ainsert into Country values(\0009102,'Iceland','ISL')\000d\000ainsert into Country values(\0009103,'India','IND')\000d\000ainsert into Country values(\0009104,'Indonesia','IDN')\000d\000ainsert into Country values(\0009105,'Iran (Islamic Republic of)','IRN')\000d\000ainsert into Country values(\0009106,'Iraq','IRQ')\000d\000ainsert into Country values(\0009107,'Ireland','IRL')\000d\000ainsert into Country values(\0009108,'Isle of Man','IMN')\000d\000ainsert into Country values(\0009109,'Israel','ISR')\000d\000ainsert into Country values(\0009110,'Italy','ITA')\000d\000ainsert into Country values(\0009111,'Jamaica','JAM')\000d\000ainsert into Country values(\0009112,'Japan','JPN')\000d\000ainsert into Country values(\0009113,'Jersey','JEY')\000d\000ainsert into Country values(\0009114,'Jordan','JOR')\000d\000ainsert into Country values(\0009115,'Kazakhstan','KAZ')\000d\000ainsert into Country values(\0009116,'Kenya','KEN')\000d\000ainsert into Country values(\0009117,'Kiribati','KIR')\000d\000ainsert into Country values(\0009118,'Korea (the Democratic People's Republic of)','PRK')\000d\000ainsert into Country values(\0009119,'Korea (the Republic of)','KOR')\000d\000ainsert into Country values(\0009120,'Kuwait','KWT')\000d\000ainsert into Country values(\0009121,'Kyrgyzstan','KGZ')\000d\000ainsert into Country values(\0009122,'Lao People's Democratic Republic (the)','LAO')\000d\000ainsert into Country values(\0009123,'Latvia','LVA')\000d\000ainsert into Country values(\0009124,'Lebanon','LBN')\000d\000ainsert into Country values(\0009125,'Lesotho','LSO')\000d\000ainsert into Country values(\0009126,'Liberia','LBR')\000d\000ainsert into Country values(\0009127,'Libya','LBY')\000d\000ainsert into Country values(\0009128,'Liechtenstein','LIE')\000d\000ainsert into Country values(\0009129,'Lithuania','LTU')\000d\000ainsert into Country values(\0009130,'Luxembourg','LUX')\000d\000ainsert into Country values(\0009131,'Macao','MAC')\000d\000ainsert into Country values(\0009132,'Madagascar','MDG')\000d\000ainsert into Country values(\0009133,'Malawi','MWI')\000d\000ainsert into Country values(\0009134,'Malaysia','MYS')\000d\000ainsert into Country values(\0009135,'Maldives','MDV')\000d\000ainsert into Country values(\0009136,'Mali','MLI')\000d\000ainsert into Country values(\0009137,'Malta','MLT')\000d\000ainsert into Country values(\0009138,'Marshall Islands (the)','MHL')\000d\000ainsert into Country values(\0009139,'Martinique','MTQ')\000d\000ainsert into Country values(\0009140,'Mauritania','MRT')\000d\000ainsert into Country values(\0009141,'Mauritius','MUS')\000d\000ainsert into Country values(\0009142,'Mayotte','MYT')\000d\000ainsert into Country values(\0009143,'Mexico','MEX')\000d\000ainsert into Country values(\0009144,'Micronesia (Federated States of)','FSM')\000d\000ainsert into Country values(\0009145,'Moldova (the Republic of)','MDA')\000d\000ainsert into Country values(\0009146,'Monaco','MCO')\000d\000ainsert into Country values(\0009147,'Mongolia','MNG')\000d\000ainsert into Country values(\0009148,'Montenegro','MNE')\000d\000ainsert into Country values(\0009149,'Montserrat','MSR')\000d\000ainsert into Country values(\0009150,'Morocco','MAR')\000d\000ainsert into Country values(\0009151,'Mozambique','MOZ')\000d\000ainsert into Country values(\0009152,'Myanmar','MMR')\000d\000ainsert into Country values(\0009153,'Namibia','NAM')\000d\000ainsert into Country values(\0009154,'Nauru','NRU')\000d\000ainsert into Country values(\0009155,'Nepal','NPL')\000d\000ainsert into Country values(\0009156,'Netherlands (the)','NLD')\000d\000ainsert into Country values(\0009157,'New Caledonia','NCL')\000d\000ainsert into Country values(\0009158,'New Zealand','NZL')\000d\000ainsert into Country values(\0009159,'Nicaragua','NIC')\000d\000ainsert into Country values(\0009160,'Niger (the)','NER')\000d\000ainsert into Country values(\0009161,'Nigeria','NGA')\000d\000ainsert into Country values(\0009162,'Niue','NIU')\000d\000ainsert into Country values(\0009163,'Norfolk Island','NFK')\000d\000ainsert into Country values(\0009164,'Northern Mariana Islands (the)','MNP')\000d\000ainsert into Country values(\0009165,'Norway','NOR')\000d\000ainsert into Country values(\0009166,'Oman','OMN')\000d\000ainsert into Country values(\0009167,'Pakistan','PAK')\000d\000ainsert into Country values(\0009168,'Palau','PLW')\000d\000ainsert into Country values(\0009169,'Palestine, State of','PSE')\000d\000ainsert into Country values(\0009170,'Panama','PAN')\000d\000ainsert into Country values(\0009171,'Papua New Guinea','PNG')\000d\000ainsert into Country values(\0009172,'Paraguay','PRY')\000d\000ainsert into Country values(\0009173,'Peru','PER')\000d\000ainsert into Country values(\0009174,'Philippines (the)','PHL')\000d\000ainsert into Country values(\0009175,'Pitcairn','PCN')\000d\000ainsert into Country values(\0009176,'Poland','POL')\000d\000ainsert into Country values(\0009177,'Portugal','PRT')\000d\000ainsert into Country values(\0009178,'Puerto Rico','PRI')\000d\000ainsert into Country values(\0009179,'Qatar','QAT')\000d\000ainsert into Country values(\0009180,'Republic of North Macedonia','MKD')\000d\000ainsert into Country values(\0009181,'Romania','ROU')\000d\000ainsert into Country values(\0009182,'Russian Federation (the)','RUS')\000d\000ainsert into Country values(\0009183,'Rwanda','RWA')\000d\000ainsert into Country values(\0009184,'Réunion','REU')\000d\000ainsert into Country values(\0009185,'Saint Barthélemy','BLM')\000d\000ainsert into Country values(\0009186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000ainsert into Country values(\0009187,'Saint Kitts and Nevis','KNA')\000d\000ainsert into Country values(\0009188,'Saint Lucia','LCA')\000d\000ainsert into Country values(\0009189,'Saint Martin (French part)','MAF')\000d\000ainsert into Country values(\0009190,'Saint Pierre and Miquelon','SPM')\000d\000ainsert into Country values(\0009191,'Saint Vincent and the Grenadines','VCT')\000d\000ainsert into Country values(\0009192,'Samoa','WSM')\000d\000ainsert into Country values(\0009193,'San Marino','SMR')\000d\000ainsert into Country values(\0009194,'Sao Tome and Principe','STP')\000d\000ainsert into Country values(\0009195,'Saudi Arabia','SAU')\000d\000ainsert into Country values(\0009196,'Senegal','SEN')\000d\000ainsert into Country values(\0009197,'Serbia','SRB')\000d\000ainsert into Country values(\0009198,'Seychelles','SYC')\000d\000ainsert into Country values(\0009199,'Sierra Leone','SLE')\000d\000ainsert into Country values(\0009200,'Singapore','SGP')\000d\000ainsert into Country values(\0009201,'Sint Maarten (Dutch part)','SXM')\000d\000ainsert into Country values(\0009202,'Slovakia','SVK')\000d\000ainsert into Country values(\0009203,'Slovenia','SVN')\000d\000ainsert into Country values(\0009204,'Solomon Islands','SLB')\000d\000ainsert into Country values(\0009205,'Somalia','SOM')\000d\000ainsert into Country values(\0009206,'South Africa','ZAF')\000d\000ainsert into Country values(\0009207,'South Georgia and the South Sandwich Islands','SGS')\000d\000ainsert into Country values(\0009208,'South Sudan','SSD')\000d\000ainsert into Country values(\0009209,'Spain','ESP')\000d\000ainsert into Country values(\0009210,'Sri Lanka','LKA')\000d\000ainsert into Country values(\0009211,'Sudan (the)','SDN')\000d\000ainsert into Country values(\0009212,'Suriname','SUR')\000d\000ainsert into Country values(\0009213,'Svalbard and Jan Mayen','SJM')\000d\000ainsert into Country values(214,'Sweden','SWE')\000d\000ainsert into Country values(215,'Switzerland','CHE')\000d\000ainsert into Country values(216,'Syrian Arab Republic','SYR')\000d\000ainsert into Country values(217,'Taiwan (Province of China)','TWN')\000d\000ainsert into Country values(218,'Tajikistan','TJK')\000d\000ainsert into Country values(219,'Tanzania, United Republic of','TZA')\000d\000ainsert into Country values(220,'Thailand','THA')\000d\000ainsert into Country values(221,'Timor-Leste','TLS')\000d\000ainsert into Country values(222,'Togo','TGO')\000d\000ainsert into Country values(223,'Tokelau','TKL')\000d\000ainsert into Country values(224,'Tonga','TON')\000d\000ainsert into Country values(225,'Trinidad and Tobago','TTO')\000d\000ainsert into Country values(226,'Tunisia','TUN')\000d\000ainsert into Country values(227,'Turkey','TUR')\000d\000ainsert into Country values(228,'Turkmenistan','TKM')\000d\000ainsert into Country values(229,'Turks and Caicos Islands (the)','TCA')\000d\000ainsert into Country values(230,'Tuvalu','TUV')\000d\000ainsert into Country values(231,'Uganda','UGA')\000d\000ainsert into Country values(232,'Ukraine','UKR')\000d\000ainsert into Country values(233,'United Arab Emirates (the)','ARE')\000d\000ainsert into Country values(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')\000d\000ainsert into Country values(235,'United States Minor Outlying Islands (the)','UMI')\000d\000ainsert into Country values(236,'United States of America (the)','USA')\000d\000ainsert into Country values(237,'Uruguay','URY')\000d\000ainsert into Country values(238,'Uzbekistan','UZB')\000d\000ainsert into Country values(239,'Vanuatu','VUT')\000d\000ainsert into Country values(240,'Venezuela (Bolivarian Republic of)','VEN')\000d\000ainsert into Country values(241,'Viet Nam','VNM')\000d\000ainsert into Country values(242,'Virgin Islands (British)','VGB')\000d\000ainsert into Country values(243,'Virgin Islands (U.S.)','VIR')\000d\000ainsert into Country values(244,'Wallis and Futuna','WLF')\000d\000ainsert into Country values(245,'Western Sahara','ESH')\000d\000ainsert into Country values(246,'Yemen','YEM')\000d\000ainsert into Country values(247,'Zambia','ZMB')\000d\000ainsert into Country values(248,'Zimbabwe','ZWE')\000d\000ainsert into Country values(249,'Åland Islands','ALA[*]')"; SQL statement:
insert into Country values(	1,'Afghanistan','AFG')
insert into Country values(	2,'Albania','ALB')
insert into Country values(	3,'Algeria','DZA')
insert into Country values(	4,'American Samoa','ASM')
insert into Country values(	5,'Andorra','AND')
insert into Country values(	6,'Angola','AGO')
insert into Country values(	7,'Anguilla','AIA')
insert into Country values(	8,'Antarctica','ATA')
insert into Country values(	9,'Antigua and Barbuda','ATG')
insert into Country values(	10,'Argentina','ARG')
insert into Country values(	11,'Armenia','ARM')
insert into Country values(	12,'Aruba','ABW')
insert into Country values(	13,'Australia','AUS')
insert into Country values(	14,'Austria','AUT')
insert into Country values(	15,'Azerbaijan','AZE')
insert into Country values(	16,'Bahamas (the)','BHS')
insert into Country values(	17,'Bahrain','BHR')
insert into Country values(	18,'Bangladesh','BGD')
insert into Country values(	19,'Barbados','BRB')
insert into Country values(	20,'Belarus','BLR')
insert into Country values(	21,'Belgium','BEL')
insert into Country values(	22,'Belize','BLZ')
insert into Country values(	23,'Benin','BEN')
insert into Country values(	24,'Bermuda','BMU')
insert into Country values(	25,'Bhutan','BTN')
insert into Country values(	26,'Bolivia (Plurinational State of)','BOL')
insert into Country values(	27,'Bonaire, Sint Eustatius and Saba','BES')
insert into Country values(	28,'Bosnia and Herzegovina','BIH')
insert into Country values(	29,'Botswana','BWA')
insert into Country values(	30,'Bouvet Island','BVT')
insert into Country values(	31,'Brazil','BRA')
insert into Country values(	32,'British Indian Ocean Territory (the)','IOT')
insert into Country values(	33,'Brunei Darussalam','BRN')
insert into Country values(	34,'Bulgaria','BGR')
insert into Country values(	35,'Burkina Faso','BFA')
insert into Country values(	36,'Burundi','BDI')
insert into Country values(	37,'Cabo Verde','CPV')
insert into Country values(	38,'Cambodia','KHM')
insert into Country values(	39,'Cameroon','CMR')
insert into Country values(	40,'Canada','CAN')
insert into Country values(	41,'Cayman Islands (the)','CYM')
insert into Country values(	42,'Central African Republic (the)','CAF')
insert into Country values(	43,'Chad','TCD')
insert into Country values(	44,'Chile','CHL')
insert into Country values(	45,'China','CHN')
insert into Country values(	46,'Christmas Island','CXR')
insert into Country values(	47,'Cocos (Keeling) Islands (the)','CCK')
insert into Country values(	48,'Colombia','COL')
insert into Country values(	49,'Comoros (the)','COM')
insert into Country values(	50,'Congo (the Democratic Republic of the)','COD')
insert into Country values(	51,'Congo (the)','COG')
insert into Country values(	52,'Cook Islands (the)','COK')
insert into Country values(	53,'Costa Rica','CRI')
insert into Country values(	54,'Croatia','HRV')
insert into Country values(	55,'Cuba','CUB')
insert into Country values(	56,'Curaçao','CUW')
insert into Country values(	57,'Cyprus','CYP')
insert into Country values(	58,'Czechia','CZE')
insert into Country values(	59,'Côte d'Ivoire','CIV')
insert into Country values(	60,'Denmark','DNK')
insert into Country values(	61,'Djibouti','DJI')
insert into Country values(	62,'Dominica','DMA')
insert into Country values(	63,'Dominican Republic (the)','DOM')
insert into Country values(	64,'Ecuador','ECU')
insert into Country values(	65,'Egypt','EGY')
insert into Country values(	66,'El Salvador','SLV')
insert into Country values(	67,'Equatorial Guinea','GNQ')
insert into Country values(	68,'Eritrea','ERI')
insert into Country values(	69,'Estonia','EST')
insert into Country values(	70,'Eswatini','SWZ')
insert into Country values(	71,'Ethiopia','ETH')
insert into Country values(	72,'Falkland Islands (the) [Malvinas]','FLK')
insert into Country values(	73,'Faroe Islands (the)','FRO')
insert into Country values(	74,'Fiji','FJI')
insert into Country values(	75,'Finland','FIN')
insert into Country values(	76,'France','FRA')
insert into Country values(	77,'French Guiana','GUF')
insert into Country values(	78,'French Polynesia','PYF')
insert into Country values(	79,'French Southern Territories (the)','ATF')
insert into Country values(	80,'Gabon','GAB')
insert into Country values(	81,'Gambia (the)','GMB')
insert into Country values(	82,'Georgia','GEO')
insert into Country values(	83,'Germany','DEU')
insert into Country values(	84,'Ghana','GHA')
insert into Country values(	85,'Gibraltar','GIB')
insert into Country values(	86,'Greece','GRC')
insert into Country values(	87,'Greenland','GRL')
insert into Country values(	88,'Grenada','GRD')
insert into Country values(	89,'Guadeloupe','GLP')
insert into Country values(	90,'Guam','GUM')
insert into Country values(	91,'Guatemala','GTM')
insert into Country values(	92,'Guernsey','GGY')
insert into Country values(	93,'Guinea','GIN')
insert into Country values(	94,'Guinea-Bissau','GNB')
insert into Country values(	95,'Guyana','GUY')
insert into Country values(	96,'Haiti','HTI')
insert into Country values(	97,'Heard Island and McDonald Islands','HMD')
insert into Country values(	98,'Holy See (the)','VAT')
insert into Country values(	99,'Honduras','HND')
insert into Country values(	100,'Hong Kong','HKG')
insert into Country values(	101,'Hungary','HUN')
insert into Country values(	102,'Iceland','ISL')
insert into Country values(	103,'India','IND')
insert into Country values(	104,'Indonesia','IDN')
insert into Country values(	105,'Iran (Islamic Republic of)','IRN')
insert into Country values(	106,'Iraq','IRQ')
insert into Country values(	107,'Ireland','IRL')
insert into Country values(	108,'Isle of Man','IMN')
insert into Country values(	109,'Israel','ISR')
insert into Country values(	110,'Italy','ITA')
insert into Country values(	111,'Jamaica','JAM')
insert into Country values(	112,'Japan','JPN')
insert into Country values(	113,'Jersey','JEY')
insert into Country values(	114,'Jordan','JOR')
insert into Country values(	115,'Kazakhstan','KAZ')
insert into Country values(	116,'Kenya','KEN')
insert into Country values(	117,'Kiribati','KIR')
insert into Country values(	118,'Korea (the Democratic People's Republic of)','PRK')
insert into Country values(	119,'Korea (the Republic of)','KOR')
insert into Country values(	120,'Kuwait','KWT')
insert into Country values(	121,'Kyrgyzstan','KGZ')
insert into Country values(	122,'Lao People's Democratic Republic (the)','LAO')
insert into Country values(	123,'Latvia','LVA')
insert into Country values(	124,'Lebanon','LBN')
insert into Country values(	125,'Lesotho','LSO')
insert into Country values(	126,'Liberia','LBR')
insert into Country values(	127,'Libya','LBY')
insert into Country values(	128,'Liechtenstein','LIE')
insert into Country values(	129,'Lithuania','LTU')
insert into Country values(	130,'Luxembourg','LUX')
insert into Country values(	131,'Macao','MAC')
insert into Country values(	132,'Madagascar','MDG')
insert into Country values(	133,'Malawi','MWI')
insert into Country values(	134,'Malaysia','MYS')
insert into Country values(	135,'Maldives','MDV')
insert into Country values(	136,'Mali','MLI')
insert into Country values(	137,'Malta','MLT')
insert into Country values(	138,'Marshall Islands (the)','MHL')
insert into Country values(	139,'Martinique','MTQ')
insert into Country values(	140,'Mauritania','MRT')
insert into Country values(	141,'Mauritius','MUS')
insert into Country values(	142,'Mayotte','MYT')
insert into Country values(	143,'Mexico','MEX')
insert into Country values(	144,'Micronesia (Federated States of)','FSM')
insert into Country values(	145,'Moldova (the Republic of)','MDA')
insert into Country values(	146,'Monaco','MCO')
insert into Country values(	147,'Mongolia','MNG')
insert into Country values(	148,'Montenegro','MNE')
insert into Country values(	149,'Montserrat','MSR')
insert into Country values(	150,'Morocco','MAR')
insert into Country values(	151,'Mozambique','MOZ')
insert into Country values(	152,'Myanmar','MMR')
insert into Country values(	153,'Namibia','NAM')
insert into Country values(	154,'Nauru','NRU')
insert into Country values(	155,'Nepal','NPL')
insert into Country values(	156,'Netherlands (the)','NLD')
insert into Country values(	157,'New Caledonia','NCL')
insert into Country values(	158,'New Zealand','NZL')
insert into Country values(	159,'Nicaragua','NIC')
insert into Country values(	160,'Niger (the)','NER')
insert into Country values(	161,'Nigeria','NGA')
insert into Country values(	162,'Niue','NIU')
insert into Country values(	163,'Norfolk Island','NFK')
insert into Country values(	164,'Northern Mariana Islands (the)','MNP')
insert into Country values(	165,'Norway','NOR')
insert into Country values(	166,'Oman','OMN')
insert into Country values(	167,'Pakistan','PAK')
insert into Country values(	168,'Palau','PLW')
insert into Country values(	169,'Palestine, State of','PSE')
insert into Country values(	170,'Panama','PAN')
insert into Country values(	171,'Papua New Guinea','PNG')
insert into Country values(	172,'Paraguay','PRY')
insert into Country values(	173,'Peru','PER')
insert into Country values(	174,'Philippines (the)','PHL')
insert into Country values(	175,'Pitcairn','PCN')
insert into Country values(	176,'Poland','POL')
insert into Country values(	177,'Portugal','PRT')
insert into Country values(	178,'Puerto Rico','PRI')
insert into Country values(	179,'Qatar','QAT')
insert into Country values(	180,'Republic of North Macedonia','MKD')
insert into Country values(	181,'Romania','ROU')
insert into Country values(	182,'Russian Federation (the)','RUS')
insert into Country values(	183,'Rwanda','RWA')
insert into Country values(	184,'Réunion','REU')
insert into Country values(	185,'Saint Barthélemy','BLM')
insert into Country values(	186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
insert into Country values(	187,'Saint Kitts and Nevis','KNA')
insert into Country values(	188,'Saint Lucia','LCA')
insert into Country values(	189,'Saint Martin (French part)','MAF')
insert into Country values(	190,'Saint Pierre and Miquelon','SPM')
insert into Country values(	191,'Saint Vincent and the Grenadines','VCT')
insert into Country values(	192,'Samoa','WSM')
insert into Country values(	193,'San Marino','SMR')
insert into Country values(	194,'Sao Tome and Principe','STP')
insert into Country values(	195,'Saudi Arabia','SAU')
insert into Country values(	196,'Senegal','SEN')
insert into Country values(	197,'Serbia','SRB')
insert into Country values(	198,'Seychelles','SYC')
insert into Country values(	199,'Sierra Leone','SLE')
insert into Country values(	200,'Singapore','SGP')
insert into Country values(	201,'Sint Maarten (Dutch part)','SXM')
insert into Country values(	202,'Slovakia','SVK')
insert into Country values(	203,'Slovenia','SVN')
insert into Country values(	204,'Solomon Islands','SLB')
insert into Country values(	205,'Somalia','SOM')
insert into Country values(	206,'South Africa','ZAF')
insert into Country values(	207,'South Georgia and the South Sandwich Islands','SGS')
insert into Country values(	208,'South Sudan','SSD')
insert into Country values(	209,'Spain','ESP')
insert into Country values(	210,'Sri Lanka','LKA')
insert into Country values(	211,'Sudan (the)','SDN')
insert into Country values(	212,'Suriname','SUR')
insert into Country values(	213,'Svalbard and Jan Mayen','SJM')
insert into Country values(214,'Sweden','SWE')
insert into Country values(215,'Switzerland','CHE')
insert into Country values(216,'Syrian Arab Republic','SYR')
insert into Country values(217,'Taiwan (Province of China)','TWN')
insert into Country values(218,'Tajikistan','TJK')
insert into Country values(219,'Tanzania, United Republic of','TZA')
insert into Country values(220,'Thailand','THA')
insert into Country values(221,'Timor-Leste','TLS')
insert into Country values(222,'Togo','TGO')
insert into Country values(223,'Tokelau','TKL')
insert into Country values(224,'Tonga','TON')
insert into Country values(225,'Trinidad and Tobago','TTO')
insert into Country values(226,'Tunisia','TUN')
insert into Country values(227,'Turkey','TUR')
insert into Country values(228,'Turkmenistan','TKM')
insert into Country values(229,'Turks and Caicos Islands (the)','TCA')
insert into Country values(230,'Tuvalu','TUV')
insert into Country values(231,'Uganda','UGA')
insert into Country values(232,'Ukraine','UKR')
insert into Country values(233,'United Arab Emirates (the)','ARE')
insert into Country values(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')
insert into Country values(235,'United States Minor Outlying Islands (the)','UMI')
insert into Country values(236,'United States of America (the)','USA')
insert into Country values(237,'Uruguay','URY')
insert into Country values(238,'Uzbekistan','UZB')
insert into Country values(239,'Vanuatu','VUT')
insert into Country values(240,'Venezuela (Bolivarian Republic of)','VEN')
insert into Country values(241,'Viet Nam','VNM')
insert into Country values(242,'Virgin Islands (British)','VGB')
insert into Country values(243,'Virgin Islands (U.S.)','VIR')
insert into Country values(244,'Wallis and Futuna','WLF')
insert into Country values(245,'Western Sahara','ESH')
insert into Country values(246,'Yemen','YEM')
insert into Country values(247,'Zambia','ZMB')
insert into Country values(248,'Zimbabwe','ZWE')
insert into Country values(249,'Åland Islands','ALA') [42000-214]
2022-12-22 03:36:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country values(245,'Western Sahara','ESH')\000d\000a[*]insert into Country values(246,'Yemen','YEM')"; SQL statement:
insert into Country values(245,'Western Sahara','ESH')
insert into Country values(246,'Yemen','YEM') [42000-214]
2022-12-22 03:43:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG'),(2,'Albania','ALB'),(3,'Algeria','DZA'),(4,'American Samoa','ASM'),(5,'Andorra','AND'),(6,'Angola','AGO'),(7,'Anguilla','AIA'),(8,'Antarctica','ATA'),(9,'Antigua and Barbuda','ATG'),(10,'Argentina','ARG'),(11,'Armenia','ARM'),(12,'Aruba','ABW'),(13,'Australia','AUS'),(14,'Austria','AUT'),(15,'Azerbaijan','AZE'),(16,'Bahamas (the)','BHS'),(17,'Bahrain','BHR'),(18,'Bangladesh','BGD'),(19,'Barbados','BRB'),(20,'Belarus','BLR'),(21,'Belgium','BEL'),(22,'Belize','BLZ'),(23,'Benin','BEN'),(24,'Bermuda','BMU'),(25,'Bhutan','BTN'),(26,'Bolivia (Plurinational State of)','BOL'),(27,'Bonaire, Sint Eustatius and Saba','BES'),(28,'Bosnia and Herzegovina','BIH'),(29,'Botswana','BWA'),(30,'Bouvet Island','BVT'),(31,'Brazil','BRA'),(32,'British Indian Ocean Territory (the)','IOT'),(33,'Brunei Darussalam','BRN'),(34,'Bulgaria','BGR'),(35,'Burkina Faso','BFA'),(36,'Burundi','BDI'),(37,'Cabo Verde','CPV'),(38,'Cambodia','KHM'),(39,'Cameroon','CMR'),(40,'Canada','CAN'),(41,'Cayman Islands (the)','CYM'),(42,'Central African Republic (the)','CAF'),(43,'Chad','TCD'),(44,'Chile','CHL'),(45,'China','CHN'),(46,'Christmas Island','CXR'),(47,'Cocos (Keeling) Islands (the)','CCK'),(48,'Colombia','COL'),(49,'Comoros (the)','COM'),(50,'Congo (the Democratic Republic of the)','COD'),(51,'Congo (the)','COG'),(52,'Cook Islands (the)','COK'),(53,'Costa Rica','CRI'),(54,'Croatia','HRV'),(55,'Cuba','CUB'),(56,'Curaçao','CUW'),(57,'Cyprus','CYP'),(58,'Czechia','CZE'),(59,'Côte d'Ivoire','CIV'),(60,'Denmark','DNK'),(61,'Djibouti','DJI'),(62,'Dominica','DMA'),(63,'Dominican Republic (the)','DOM'),(64,'Ecuador','ECU'),(65,'Egypt','EGY'),(66,'El Salvador','SLV'),(67,'Equatorial Guinea','GNQ'),(68,'Eritrea','ERI'),(69,'Estonia','EST'),(70,'Eswatini','SWZ'),(71,'Ethiopia','ETH'),(72,'Falkland Islands (the) [Malvinas]','FLK'),(73,'Faroe Islands (the)','FRO'),(74,'Fiji','FJI'),(75,'Finland','FIN'),(76,'France','FRA'),(77,'French Guiana','GUF'),(78,'French Polynesia','PYF'),(79,'French Southern Territories (the)','ATF'),(80,'Gabon','GAB'),(81,'Gambia (the)','GMB'),(82,'Georgia','GEO'),(83,'Germany','DEU'),(84,'Ghana','GHA'),(85,'Gibraltar','GIB'),(86,'Greece','GRC'),(87,'Greenland','GRL'),(88,'Grenada','GRD'),(89,'Guadeloupe','GLP'),(90,'Guam','GUM'),(91,'Guatemala','GTM'),(92,'Guernsey','GGY'),(93,'Guinea','GIN'),(94,'Guinea-Bissau','GNB'),(95,'Guyana','GUY'),(96,'Haiti','HTI'),(97,'Heard Island and McDonald Islands','HMD'),(98,'Holy See (the)','VAT'),(99,'Honduras','HND'),(100,'Hong Kong','HKG'),(101,'Hungary','HUN'),(102,'Iceland','ISL'),(103,'India','IND'),(104,'Indonesia','IDN'),(105,'Iran (Islamic Republic of)','IRN'),(106,'Iraq','IRQ'),(107,'Ireland','IRL'),(108,'Isle of Man','IMN'),(109,'Israel','ISR'),(110,'Italy','ITA'),(111,'Jamaica','JAM'),(112,'Japan','JPN'),(113,'Jersey','JEY'),(114,'Jordan','JOR'),(115,'Kazakhstan','KAZ'),(116,'Kenya','KEN'),(117,'Kiribati','KIR'),(118,'Korea (the Democratic People's Republic of)','PRK'),(119,'Korea (the Republic of)','KOR'),(120,'Kuwait','KWT'),(121,'Kyrgyzstan','KGZ'),(122,'Lao People's Democratic Republic (the)','LAO'),(123,'Latvia','LVA'),(124,'Lebanon','LBN'),(125,'Lesotho','LSO'),(126,'Liberia','LBR'),(127,'Libya','LBY'),(128,'Liechtenstein','LIE'),(129,'Lithuania','LTU'),(130,'Luxembourg','LUX'),(131,'Macao','MAC'),(132,'Madagascar','MDG'),(133,'Malawi','MWI'),(134,'Malaysia','MYS'),(135,'Maldives','MDV'),(136,'Mali','MLI'),(137,'Malta','MLT'),(138,'Marshall Islands (the)','MHL'),(139,'Martinique','MTQ'),(140,'Mauritania','MRT'),(141,'Mauritius','MUS'),(142,'Mayotte','MYT'),(143,'Mexico','MEX'),(144,'Micronesia (Federated States of)','FSM'),(145,'Moldova (the Republic of)','MDA'),(146,'Monaco','MCO'),(147,'Mongolia','MNG'),(148,'Montenegro','MNE'),(149,'Montserrat','MSR'),(150,'Morocco','MAR'),(151,'Mozambique','MOZ'),(152,'Myanmar','MMR'),(153,'Namibia','NAM'),(154,'Nauru','NRU'),(155,'Nepal','NPL'),(156,'Netherlands (the)','NLD'),(157,'New Caledonia','NCL'),(158,'New Zealand','NZL'),(159,'Nicaragua','NIC'),(160,'Niger (the)','NER'),(161,'Nigeria','NGA'),(162,'Niue','NIU'),(163,'Norfolk Island','NFK'),(164,'Northern Mariana Islands (the)','MNP'),(165,'Norway','NOR'),(166,'Oman','OMN'),(167,'Pakistan','PAK'),(168,'Palau','PLW'),(169,'Palestine, State of','PSE'),(170,'Panama','PAN'),(171,'Papua New Guinea','PNG'),(172,'Paraguay','PRY'),(173,'Peru','PER'),(174,'Philippines (the)','PHL'),(175,'Pitcairn','PCN'),(176,'Poland','POL'),(177,'Portugal','PRT'),(178,'Puerto Rico','PRI'),(179,'Qatar','QAT'),(180,'Republic of North Macedonia','MKD'),(181,'Romania','ROU'),(182,'Russian Federation (the)','RUS'),(183,'Rwanda','RWA'),(184,'Réunion','REU'),(185,'Saint Barthélemy','BLM'),(186,'Saint Helena, Ascension and Tristan da Cunha','SHN'),(187,'Saint Kitts and Nevis','KNA'),(188,'Saint Lucia','LCA'),(189,'Saint Martin (French part)','MAF'),(190,'Saint Pierre and Miquelon','SPM'),(191,'Saint Vincent and the Grenadines','VCT'),(192,'Samoa','WSM'),(193,'San Marino','SMR'),(194,'Sao Tome and Principe','STP'),(195,'Saudi Arabia','SAU'),(196,'Senegal','SEN'),(197,'Serbia','SRB'),(198,'Seychelles','SYC'),(199,'Sierra Leone','SLE'),(200,'Singapore','SGP'),(201,'Sint Maarten (Dutch part)','SXM'),(202,'Slovakia','SVK'),(203,'Slovenia','SVN'),(204,'Solomon Islands','SLB'),(205,'Somalia','SOM'),(206,'South Africa','ZAF'),(207,'South Georgia and the South Sandwich Islands','SGS'),(208,'South Sudan','SSD'),(209,'Spain','ESP'),(210,'Sri Lanka','LKA'),(211,'Sudan (the)','SDN'),(212,'Suriname','SUR'),(213,'Svalbard and Jan Mayen','SJM'),(214,'Sweden','SWE'),(215,'Switzerland','CHE'),(216,'Syrian Arab Republic','SYR'),(217,'Taiwan (Province of China)','TWN'),(218,'Tajikistan','TJK'),(219,'Tanzania, United Republic of','TZA'),(220,'Thailand','THA'),(221,'Timor-Leste','TLS'),(222,'Togo','TGO'),(223,'Tokelau','TKL'),(224,'Tonga','TON'),(225,'Trinidad and Tobago','TTO'),(226,'Tunisia','TUN'),(227,'Turkey','TUR'),(228,'Turkmenistan','TKM'),(229,'Turks and Caicos Islands (the)','TCA'),(230,'Tuvalu','TUV'),(231,'Uganda','UGA'),(232,'Ukraine','UKR'),(233,'United Arab Emirates (the)','ARE'),(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR'),(235,'United States Minor Outlying Islands (the)','UMI'),(236,'United States of America (the)','USA'),(237,'Uruguay','URY'),(238,'Uzbekistan','UZB'),(239,'Vanuatu','VUT'),(240,'Venezuela (Bolivarian Republic of)','VEN'),(241,'Viet Nam','VNM'),(242,'Virgin Islands (British)','VGB'),(243,'Virgin Islands (U.S.)','VIR'),(244,'Wallis and Futuna','WLF'),(245,'Western Sahara','ESH'),(246,'Yemen','YEM'),(247,'Zambia','ZMB'),(248,'Zimbabwe','ZWE'),(249,'Åland Islands','ALA[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG'),(2,'Albania','ALB'),(3,'Algeria','DZA'),(4,'American Samoa','ASM'),(5,'Andorra','AND'),(6,'Angola','AGO'),(7,'Anguilla','AIA'),(8,'Antarctica','ATA'),(9,'Antigua and Barbuda','ATG'),(10,'Argentina','ARG'),(11,'Armenia','ARM'),(12,'Aruba','ABW'),(13,'Australia','AUS'),(14,'Austria','AUT'),(15,'Azerbaijan','AZE'),(16,'Bahamas (the)','BHS'),(17,'Bahrain','BHR'),(18,'Bangladesh','BGD'),(19,'Barbados','BRB'),(20,'Belarus','BLR'),(21,'Belgium','BEL'),(22,'Belize','BLZ'),(23,'Benin','BEN'),(24,'Bermuda','BMU'),(25,'Bhutan','BTN'),(26,'Bolivia (Plurinational State of)','BOL'),(27,'Bonaire, Sint Eustatius and Saba','BES'),(28,'Bosnia and Herzegovina','BIH'),(29,'Botswana','BWA'),(30,'Bouvet Island','BVT'),(31,'Brazil','BRA'),(32,'British Indian Ocean Territory (the)','IOT'),(33,'Brunei Darussalam','BRN'),(34,'Bulgaria','BGR'),(35,'Burkina Faso','BFA'),(36,'Burundi','BDI'),(37,'Cabo Verde','CPV'),(38,'Cambodia','KHM'),(39,'Cameroon','CMR'),(40,'Canada','CAN'),(41,'Cayman Islands (the)','CYM'),(42,'Central African Republic (the)','CAF'),(43,'Chad','TCD'),(44,'Chile','CHL'),(45,'China','CHN'),(46,'Christmas Island','CXR'),(47,'Cocos (Keeling) Islands (the)','CCK'),(48,'Colombia','COL'),(49,'Comoros (the)','COM'),(50,'Congo (the Democratic Republic of the)','COD'),(51,'Congo (the)','COG'),(52,'Cook Islands (the)','COK'),(53,'Costa Rica','CRI'),(54,'Croatia','HRV'),(55,'Cuba','CUB'),(56,'Curaçao','CUW'),(57,'Cyprus','CYP'),(58,'Czechia','CZE'),(59,'Côte d'Ivoire','CIV'),(60,'Denmark','DNK'),(61,'Djibouti','DJI'),(62,'Dominica','DMA'),(63,'Dominican Republic (the)','DOM'),(64,'Ecuador','ECU'),(65,'Egypt','EGY'),(66,'El Salvador','SLV'),(67,'Equatorial Guinea','GNQ'),(68,'Eritrea','ERI'),(69,'Estonia','EST'),(70,'Eswatini','SWZ'),(71,'Ethiopia','ETH'),(72,'Falkland Islands (the) [Malvinas]','FLK'),(73,'Faroe Islands (the)','FRO'),(74,'Fiji','FJI'),(75,'Finland','FIN'),(76,'France','FRA'),(77,'French Guiana','GUF'),(78,'French Polynesia','PYF'),(79,'French Southern Territories (the)','ATF'),(80,'Gabon','GAB'),(81,'Gambia (the)','GMB'),(82,'Georgia','GEO'),(83,'Germany','DEU'),(84,'Ghana','GHA'),(85,'Gibraltar','GIB'),(86,'Greece','GRC'),(87,'Greenland','GRL'),(88,'Grenada','GRD'),(89,'Guadeloupe','GLP'),(90,'Guam','GUM'),(91,'Guatemala','GTM'),(92,'Guernsey','GGY'),(93,'Guinea','GIN'),(94,'Guinea-Bissau','GNB'),(95,'Guyana','GUY'),(96,'Haiti','HTI'),(97,'Heard Island and McDonald Islands','HMD'),(98,'Holy See (the)','VAT'),(99,'Honduras','HND'),(100,'Hong Kong','HKG'),(101,'Hungary','HUN'),(102,'Iceland','ISL'),(103,'India','IND'),(104,'Indonesia','IDN'),(105,'Iran (Islamic Republic of)','IRN'),(106,'Iraq','IRQ'),(107,'Ireland','IRL'),(108,'Isle of Man','IMN'),(109,'Israel','ISR'),(110,'Italy','ITA'),(111,'Jamaica','JAM'),(112,'Japan','JPN'),(113,'Jersey','JEY'),(114,'Jordan','JOR'),(115,'Kazakhstan','KAZ'),(116,'Kenya','KEN'),(117,'Kiribati','KIR'),(118,'Korea (the Democratic People's Republic of)','PRK'),(119,'Korea (the Republic of)','KOR'),(120,'Kuwait','KWT'),(121,'Kyrgyzstan','KGZ'),(122,'Lao People's Democratic Republic (the)','LAO'),(123,'Latvia','LVA'),(124,'Lebanon','LBN'),(125,'Lesotho','LSO'),(126,'Liberia','LBR'),(127,'Libya','LBY'),(128,'Liechtenstein','LIE'),(129,'Lithuania','LTU'),(130,'Luxembourg','LUX'),(131,'Macao','MAC'),(132,'Madagascar','MDG'),(133,'Malawi','MWI'),(134,'Malaysia','MYS'),(135,'Maldives','MDV'),(136,'Mali','MLI'),(137,'Malta','MLT'),(138,'Marshall Islands (the)','MHL'),(139,'Martinique','MTQ'),(140,'Mauritania','MRT'),(141,'Mauritius','MUS'),(142,'Mayotte','MYT'),(143,'Mexico','MEX'),(144,'Micronesia (Federated States of)','FSM'),(145,'Moldova (the Republic of)','MDA'),(146,'Monaco','MCO'),(147,'Mongolia','MNG'),(148,'Montenegro','MNE'),(149,'Montserrat','MSR'),(150,'Morocco','MAR'),(151,'Mozambique','MOZ'),(152,'Myanmar','MMR'),(153,'Namibia','NAM'),(154,'Nauru','NRU'),(155,'Nepal','NPL'),(156,'Netherlands (the)','NLD'),(157,'New Caledonia','NCL'),(158,'New Zealand','NZL'),(159,'Nicaragua','NIC'),(160,'Niger (the)','NER'),(161,'Nigeria','NGA'),(162,'Niue','NIU'),(163,'Norfolk Island','NFK'),(164,'Northern Mariana Islands (the)','MNP'),(165,'Norway','NOR'),(166,'Oman','OMN'),(167,'Pakistan','PAK'),(168,'Palau','PLW'),(169,'Palestine, State of','PSE'),(170,'Panama','PAN'),(171,'Papua New Guinea','PNG'),(172,'Paraguay','PRY'),(173,'Peru','PER'),(174,'Philippines (the)','PHL'),(175,'Pitcairn','PCN'),(176,'Poland','POL'),(177,'Portugal','PRT'),(178,'Puerto Rico','PRI'),(179,'Qatar','QAT'),(180,'Republic of North Macedonia','MKD'),(181,'Romania','ROU'),(182,'Russian Federation (the)','RUS'),(183,'Rwanda','RWA'),(184,'Réunion','REU'),(185,'Saint Barthélemy','BLM'),(186,'Saint Helena, Ascension and Tristan da Cunha','SHN'),(187,'Saint Kitts and Nevis','KNA'),(188,'Saint Lucia','LCA'),(189,'Saint Martin (French part)','MAF'),(190,'Saint Pierre and Miquelon','SPM'),(191,'Saint Vincent and the Grenadines','VCT'),(192,'Samoa','WSM'),(193,'San Marino','SMR'),(194,'Sao Tome and Principe','STP'),(195,'Saudi Arabia','SAU'),(196,'Senegal','SEN'),(197,'Serbia','SRB'),(198,'Seychelles','SYC'),(199,'Sierra Leone','SLE'),(200,'Singapore','SGP'),(201,'Sint Maarten (Dutch part)','SXM'),(202,'Slovakia','SVK'),(203,'Slovenia','SVN'),(204,'Solomon Islands','SLB'),(205,'Somalia','SOM'),(206,'South Africa','ZAF'),(207,'South Georgia and the South Sandwich Islands','SGS'),(208,'South Sudan','SSD'),(209,'Spain','ESP'),(210,'Sri Lanka','LKA'),(211,'Sudan (the)','SDN'),(212,'Suriname','SUR'),(213,'Svalbard and Jan Mayen','SJM'),(214,'Sweden','SWE'),(215,'Switzerland','CHE'),(216,'Syrian Arab Republic','SYR'),(217,'Taiwan (Province of China)','TWN'),(218,'Tajikistan','TJK'),(219,'Tanzania, United Republic of','TZA'),(220,'Thailand','THA'),(221,'Timor-Leste','TLS'),(222,'Togo','TGO'),(223,'Tokelau','TKL'),(224,'Tonga','TON'),(225,'Trinidad and Tobago','TTO'),(226,'Tunisia','TUN'),(227,'Turkey','TUR'),(228,'Turkmenistan','TKM'),(229,'Turks and Caicos Islands (the)','TCA'),(230,'Tuvalu','TUV'),(231,'Uganda','UGA'),(232,'Ukraine','UKR'),(233,'United Arab Emirates (the)','ARE'),(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR'),(235,'United States Minor Outlying Islands (the)','UMI'),(236,'United States of America (the)','USA'),(237,'Uruguay','URY'),(238,'Uzbekistan','UZB'),(239,'Vanuatu','VUT'),(240,'Venezuela (Bolivarian Republic of)','VEN'),(241,'Viet Nam','VNM'),(242,'Virgin Islands (British)','VGB'),(243,'Virgin Islands (U.S.)','VIR'),(244,'Wallis and Futuna','WLF'),(245,'Western Sahara','ESH'),(246,'Yemen','YEM'),(247,'Zambia','ZMB'),(248,'Zimbabwe','ZWE'),(249,'Åland Islands','ALA') [42000-214]
2022-12-22 03:48:35 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG'),(2,'Albania','ALB'),(3,'Algeria','DZA')\000d\000a\000d\000a[*]delete from country"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG'),(2,'Albania','ALB'),(3,'Algeria','DZA')

delete from country [42000-214]
2022-12-22 03:49:06 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG')\000d\000a,(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Réunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP')\000d\000a,(201,'Sint Maarten (Dutch part)','SXM')\000d\000a,(202,'Slovakia','SVK')\000d\000a,(203,'Slovenia','SVN')\000d\000a,(204,'Solomon Islands','SLB')\000d\000a,(205,'Somalia','SOM')\000d\000a,(206,'South Africa','ZAF')\000d\000a,(207,'South Georgia and the South Sandwich Islands','SGS')\000d\000a,(208,'South Sudan','SSD')\000d\000a,(209,'Spain','ESP')\000d\000a,(210,'Sri Lanka','LKA')\000d\000a,(211,'Sudan (the)','SDN')\000d\000a,(212,'Suriname','SUR')\000d\000a,(213,'Svalbard and Jan Mayen','SJM')\000d\000a,(214,'Sweden','SWE')\000d\000a,(215,'Switzerland','CHE')\000d\000a,(216,'Syrian Arab Republic','SYR')\000d\000a,(217,'Taiwan (Province of China)','TWN')\000d\000a,(218,'Tajikistan','TJK')\000d\000a,(219,'Tanzania, United Republic of','TZA')\000d\000a,(220,'Thailand','THA')\000d\000a,(221,'Timor-Leste','TLS')\000d\000a,(222,'Togo','TGO')\000d\000a,(223,'Tokelau','TKL')\000d\000a,(224,'Tonga','TON')\000d\000a,(225,'Trinidad and Tobago','TTO')\000d\000a,(226,'Tunisia','TUN')\000d\000a,(227,'Turkey','TUR')\000d\000a,(228,'Turkmenistan','TKM')\000d\000a,(229,'Turks and Caicos Islands (the)','TCA')\000d\000a,(230,'Tuvalu','TUV')\000d\000a,(231,'Uganda','UGA')\000d\000a,(232,'Ukraine','UKR')\000d\000a,(233,'United Arab Emirates (the)','ARE')\000d\000a,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')\000d\000a,(235,'United States Minor Outlying Islands (the)','UMI')\000d\000a,(236,'United States of America (the)','USA')\000d\000a,(237,'Uruguay','URY')\000d\000a,(238,'Uzbekistan','UZB')\000d\000a,(239,'Vanuatu','VUT')\000d\000a,(240,'Venezuela (Bolivarian Republic of)','VEN')\000d\000a,(241,'Viet Nam','VNM')\000d\000a,(242,'Virgin Islands (British)','VGB')\000d\000a,(243,'Virgin Islands (U.S.)','VIR')\000d\000a,(244,'Wallis and Futuna','WLF')\000d\000a,(245,'Western Sahara','ESH')\000d\000a,(246,'Yemen','YEM')\000d\000a,(247,'Zambia','ZMB')\000d\000a,(248,'Zimbabwe','ZWE')\000d\000a,(249,'Åland Islands','ALA[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG')
,(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Réunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP')
,(201,'Sint Maarten (Dutch part)','SXM')
,(202,'Slovakia','SVK')
,(203,'Slovenia','SVN')
,(204,'Solomon Islands','SLB')
,(205,'Somalia','SOM')
,(206,'South Africa','ZAF')
,(207,'South Georgia and the South Sandwich Islands','SGS')
,(208,'South Sudan','SSD')
,(209,'Spain','ESP')
,(210,'Sri Lanka','LKA')
,(211,'Sudan (the)','SDN')
,(212,'Suriname','SUR')
,(213,'Svalbard and Jan Mayen','SJM')
,(214,'Sweden','SWE')
,(215,'Switzerland','CHE')
,(216,'Syrian Arab Republic','SYR')
,(217,'Taiwan (Province of China)','TWN')
,(218,'Tajikistan','TJK')
,(219,'Tanzania, United Republic of','TZA')
,(220,'Thailand','THA')
,(221,'Timor-Leste','TLS')
,(222,'Togo','TGO')
,(223,'Tokelau','TKL')
,(224,'Tonga','TON')
,(225,'Trinidad and Tobago','TTO')
,(226,'Tunisia','TUN')
,(227,'Turkey','TUR')
,(228,'Turkmenistan','TKM')
,(229,'Turks and Caicos Islands (the)','TCA')
,(230,'Tuvalu','TUV')
,(231,'Uganda','UGA')
,(232,'Ukraine','UKR')
,(233,'United Arab Emirates (the)','ARE')
,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')
,(235,'United States Minor Outlying Islands (the)','UMI')
,(236,'United States of America (the)','USA')
,(237,'Uruguay','URY')
,(238,'Uzbekistan','UZB')
,(239,'Vanuatu','VUT')
,(240,'Venezuela (Bolivarian Republic of)','VEN')
,(241,'Viet Nam','VNM')
,(242,'Virgin Islands (British)','VGB')
,(243,'Virgin Islands (U.S.)','VIR')
,(244,'Wallis and Futuna','WLF')
,(245,'Western Sahara','ESH')
,(246,'Yemen','YEM')
,(247,'Zambia','ZMB')
,(248,'Zimbabwe','ZWE')
,(249,'Åland Islands','ALA') [42000-214]
2022-12-22 03:49:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "delete from [*]table"; expected "identifier"; SQL statement:
delete from table [42001-214]
2022-12-22 03:50:56 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG')\000d\000a,(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Réunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP')\000d\000a,(201,'Sint Maarten (Dutch part)','SXM')\000d\000a,(202,'Slovakia','SVK')\000d\000a,(203,'Slovenia','SVN')\000d\000a,(204,'Solomon Islands','SLB')\000d\000a,(205,'Somalia','SOM')\000d\000a,(206,'South Africa','ZAF')\000d\000a,(207,'South Georgia and the South Sandwich Islands','SGS')\000d\000a,(208,'South Sudan','SSD')\000d\000a,(209,'Spain','ESP')\000d\000a,(210,'Sri Lanka','LKA')\000d\000a,(211,'Sudan (the)','SDN')\000d\000a,(212,'Suriname','SUR')\000d\000a,(213,'Svalbard and Jan Mayen','SJM')\000d\000a,(214,'Sweden','SWE')\000d\000a,(215,'Switzerland','CHE')\000d\000a,(216,'Syrian Arab Republic','SYR')\000d\000a,(217,'Taiwan (Province of China)','TWN')\000d\000a,(218,'Tajikistan','TJK')\000d\000a,(219,'Tanzania, United Republic of','TZA')\000d\000a,(220,'Thailand','THA')\000d\000a,(221,'Timor-Leste','TLS')\000d\000a,(222,'Togo','TGO')\000d\000a,(223,'Tokelau','TKL')\000d\000a,(224,'Tonga','TON')\000d\000a,(225,'Trinidad and Tobago','TTO')\000d\000a,(226,'Tunisia','TUN')\000d\000a,(227,'Turkey','TUR')\000d\000a,(228,'Turkmenistan','TKM')\000d\000a,(229,'Turks and Caicos Islands (the)','TCA')\000d\000a,(230,'Tuvalu','TUV')\000d\000a,(231,'Uganda','UGA')\000d\000a,(232,'Ukraine','UKR')\000d\000a,(233,'United Arab Emirates (the)','ARE')\000d\000a,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')\000d\000a,(235,'United States Minor Outlying Islands (the)','UMI')\000d\000a,(236,'United States of America (the)','USA')\000d\000a,(237,'Uruguay','URY')\000d\000a,(238,'Uzbekistan','UZB')\000d\000a,(239,'Vanuatu','VUT')\000d\000a,(240,'Venezuela (Bolivarian Republic of)','VEN')\000d\000a,(241,'Viet Nam','VNM')\000d\000a,(242,'Virgin Islands (British)','VGB')\000d\000a,(243,'Virgin Islands (U.S.)','VIR')\000d\000a,(244,'Wallis and Futuna','WLF')\000d\000a,(245,'Western Sahara','ESH')\000d\000a,(246,'Yemen','YEM')\000d\000a,(247,'Zambia','ZMB')\000d\000a,(248,'Zimbabwe','ZWE[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG')
,(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Réunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP')
,(201,'Sint Maarten (Dutch part)','SXM')
,(202,'Slovakia','SVK')
,(203,'Slovenia','SVN')
,(204,'Solomon Islands','SLB')
,(205,'Somalia','SOM')
,(206,'South Africa','ZAF')
,(207,'South Georgia and the South Sandwich Islands','SGS')
,(208,'South Sudan','SSD')
,(209,'Spain','ESP')
,(210,'Sri Lanka','LKA')
,(211,'Sudan (the)','SDN')
,(212,'Suriname','SUR')
,(213,'Svalbard and Jan Mayen','SJM')
,(214,'Sweden','SWE')
,(215,'Switzerland','CHE')
,(216,'Syrian Arab Republic','SYR')
,(217,'Taiwan (Province of China)','TWN')
,(218,'Tajikistan','TJK')
,(219,'Tanzania, United Republic of','TZA')
,(220,'Thailand','THA')
,(221,'Timor-Leste','TLS')
,(222,'Togo','TGO')
,(223,'Tokelau','TKL')
,(224,'Tonga','TON')
,(225,'Trinidad and Tobago','TTO')
,(226,'Tunisia','TUN')
,(227,'Turkey','TUR')
,(228,'Turkmenistan','TKM')
,(229,'Turks and Caicos Islands (the)','TCA')
,(230,'Tuvalu','TUV')
,(231,'Uganda','UGA')
,(232,'Ukraine','UKR')
,(233,'United Arab Emirates (the)','ARE')
,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')
,(235,'United States Minor Outlying Islands (the)','UMI')
,(236,'United States of America (the)','USA')
,(237,'Uruguay','URY')
,(238,'Uzbekistan','UZB')
,(239,'Vanuatu','VUT')
,(240,'Venezuela (Bolivarian Republic of)','VEN')
,(241,'Viet Nam','VNM')
,(242,'Virgin Islands (British)','VGB')
,(243,'Virgin Islands (U.S.)','VIR')
,(244,'Wallis and Futuna','WLF')
,(245,'Western Sahara','ESH')
,(246,'Yemen','YEM')
,(247,'Zambia','ZMB')
,(248,'Zimbabwe','ZWE') [42000-214]
2022-12-22 03:51:23 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG') [42000-214]
2022-12-22 03:51:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG'); [42000-214]
2022-12-22 03:51:30 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG'); [42000-214]
2022-12-22 03:51:30 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG'); [42000-214]
2022-12-22 03:53:32 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG')\000d\000a,(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG')
,(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR') [42000-214]
2022-12-22 03:53:50 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG')\000d\000a,(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG')
,(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR'); [42000-214]
2022-12-22 03:56:01 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG')\000d\000a,(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Réunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP')\000d\000a,(201,'Sint Maarten (Dutch part)','SXM')\000d\000a,(202,'Slovakia','SVK')\000d\000a,(203,'Slovenia','SVN')\000d\000a,(204,'Solomon Islands','SLB')\000d\000a,(205,'Somalia','SOM')\000d\000a,(206,'South Africa','ZAF')\000d\000a,(207,'South Georgia and the South Sandwich Islands','SGS')\000d\000a,(208,'South Sudan','SSD')\000d\000a,(209,'Spain','ESP')\000d\000a,(210,'Sri Lanka','LKA')\000d\000a,(211,'Sudan (the)','SDN')\000d\000a,(212,'Suriname','SUR')\000d\000a,(213,'Svalbard and Jan Mayen','SJM')\000d\000a,(214,'Sweden','SWE')\000d\000a,(215,'Switzerland','CHE')\000d\000a,(216,'Syrian Arab Republic','SYR')\000d\000a,(217,'Taiwan (Province of China)','TWN')\000d\000a,(218,'Tajikistan','TJK')\000d\000a,(219,'Tanzania, United Republic of','TZA')\000d\000a,(220,'Thailand','THA')\000d\000a,(221,'Timor-Leste','TLS')\000d\000a,(222,'Togo','TGO')\000d\000a,(223,'Tokelau','TKL')\000d\000a,(224,'Tonga','TON')\000d\000a,(225,'Trinidad and Tobago','TTO')\000d\000a,(226,'Tunisia','TUN')\000d\000a,(227,'Turkey','TUR')\000d\000a,(228,'Turkmenistan','TKM')\000d\000a,(229,'Turks and Caicos Islands (the)','TCA')\000d\000a,(230,'Tuvalu','TUV')\000d\000a,(231,'Uganda','UGA')\000d\000a,(232,'Ukraine','UKR')\000d\000a,(233,'United Arab Emirates (the)','ARE')\000d\000a,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')\000d\000a,(235,'United States Minor Outlying Islands (the)','UMI')\000d\000a,(236,'United States of America (the)','USA')\000d\000a,(237,'Uruguay','URY')\000d\000a,(238,'Uzbekistan','UZB')\000d\000a,(239,'Vanuatu','VUT')\000d\000a,(240,'Venezuela (Bolivarian Republic of)','VEN')\000d\000a,(241,'Viet Nam','VNM')\000d\000a,(242,'Virgin Islands (British)','VGB')\000d\000a,(243,'Virgin Islands (U.S.)','VIR')\000d\000a,(244,'Wallis and Futuna','WLF')\000d\000a,(245,'Western Sahara','ESH')\000d\000a,(246,'Yemen','YEM')\000d\000a,(247,'Zambia','ZMB')\000d\000a,(248,'Zimbabwe','ZWE')\000d\000a,(249,'Åland Islands','ALA[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG')
,(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Réunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP')
,(201,'Sint Maarten (Dutch part)','SXM')
,(202,'Slovakia','SVK')
,(203,'Slovenia','SVN')
,(204,'Solomon Islands','SLB')
,(205,'Somalia','SOM')
,(206,'South Africa','ZAF')
,(207,'South Georgia and the South Sandwich Islands','SGS')
,(208,'South Sudan','SSD')
,(209,'Spain','ESP')
,(210,'Sri Lanka','LKA')
,(211,'Sudan (the)','SDN')
,(212,'Suriname','SUR')
,(213,'Svalbard and Jan Mayen','SJM')
,(214,'Sweden','SWE')
,(215,'Switzerland','CHE')
,(216,'Syrian Arab Republic','SYR')
,(217,'Taiwan (Province of China)','TWN')
,(218,'Tajikistan','TJK')
,(219,'Tanzania, United Republic of','TZA')
,(220,'Thailand','THA')
,(221,'Timor-Leste','TLS')
,(222,'Togo','TGO')
,(223,'Tokelau','TKL')
,(224,'Tonga','TON')
,(225,'Trinidad and Tobago','TTO')
,(226,'Tunisia','TUN')
,(227,'Turkey','TUR')
,(228,'Turkmenistan','TKM')
,(229,'Turks and Caicos Islands (the)','TCA')
,(230,'Tuvalu','TUV')
,(231,'Uganda','UGA')
,(232,'Ukraine','UKR')
,(233,'United Arab Emirates (the)','ARE')
,(234,'United Kingdom of Great Britain and Northern Ireland (the)','GBR')
,(235,'United States Minor Outlying Islands (the)','UMI')
,(236,'United States of America (the)','USA')
,(237,'Uruguay','URY')
,(238,'Uzbekistan','UZB')
,(239,'Vanuatu','VUT')
,(240,'Venezuela (Bolivarian Republic of)','VEN')
,(241,'Viet Nam','VNM')
,(242,'Virgin Islands (British)','VGB')
,(243,'Virgin Islands (U.S.)','VIR')
,(244,'Wallis and Futuna','WLF')
,(245,'Western Sahara','ESH')
,(246,'Yemen','YEM')
,(247,'Zambia','ZMB')
,(248,'Zimbabwe','ZWE')
,(249,'Åland Islands','ALA'); [42000-214]
2022-12-22 03:58:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')\000d\000a,(2,'Albania','ALB')\000d\000a,(3,'Algeria','DZA')\000d\000a,(4,'American Samoa','ASM')\000d\000a,(5,'Andorra','AND')\000d\000a,(6,'Angola','AGO')\000d\000a,(7,'Anguilla','AIA')\000d\000a,(8,'Antarctica','ATA')\000d\000a,(9,'Antigua and Barbuda','ATG')\000d\000a,(10,'Argentina','ARG')\000d\000a,(11,'Armenia','ARM')\000d\000a,(12,'Aruba','ABW')\000d\000a,(13,'Australia','AUS')\000d\000a,(14,'Austria','AUT')\000d\000a,(15,'Azerbaijan','AZE')\000d\000a,(16,'Bahamas (the)','BHS')\000d\000a,(17,'Bahrain','BHR')\000d\000a,(18,'Bangladesh','BGD')\000d\000a,(19,'Barbados','BRB')\000d\000a,(20,'Belarus','BLR')\000d\000a,(21,'Belgium','BEL')\000d\000a,(22,'Belize','BLZ')\000d\000a,(23,'Benin','BEN')\000d\000a,(24,'Bermuda','BMU')\000d\000a,(25,'Bhutan','BTN')\000d\000a,(26,'Bolivia (Plurinational State of)','BOL')\000d\000a,(27,'Bonaire, Sint Eustatius and Saba','BES')\000d\000a,(28,'Bosnia and Herzegovina','BIH')\000d\000a,(29,'Botswana','BWA')\000d\000a,(30,'Bouvet Island','BVT')\000d\000a,(31,'Brazil','BRA')\000d\000a,(32,'British Indian Ocean Territory (the)','IOT')\000d\000a,(33,'Brunei Darussalam','BRN')\000d\000a,(34,'Bulgaria','BGR')\000d\000a,(35,'Burkina Faso','BFA')\000d\000a,(36,'Burundi','BDI')\000d\000a,(37,'Cabo Verde','CPV')\000d\000a,(38,'Cambodia','KHM')\000d\000a,(39,'Cameroon','CMR')\000d\000a,(40,'Canada','CAN')\000d\000a,(41,'Cayman Islands (the)','CYM')\000d\000a,(42,'Central African Republic (the)','CAF')\000d\000a,(43,'Chad','TCD')\000d\000a,(44,'Chile','CHL')\000d\000a,(45,'China','CHN')\000d\000a,(46,'Christmas Island','CXR')\000d\000a,(47,'Cocos (Keeling) Islands (the)','CCK')\000d\000a,(48,'Colombia','COL')\000d\000a,(49,'Comoros (the)','COM')\000d\000a,(50,'Congo (the Democratic Republic of the)','COD')\000d\000a,(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK')\000d\000a,(61,'Djibouti','DJI')\000d\000a,(62,'Dominica','DMA')\000d\000a,(63,'Dominican Republic (the)','DOM')\000d\000a,(64,'Ecuador','ECU')\000d\000a,(65,'Egypt','EGY')\000d\000a,(66,'El Salvador','SLV')\000d\000a,(67,'Equatorial Guinea','GNQ')\000d\000a,(68,'Eritrea','ERI')\000d\000a,(69,'Estonia','EST')\000d\000a,(70,'Eswatini','SWZ')\000d\000a,(71,'Ethiopia','ETH')\000d\000a,(72,'Falkland Islands (the) [Malvinas]','FLK')\000d\000a,(73,'Faroe Islands (the)','FRO')\000d\000a,(74,'Fiji','FJI')\000d\000a,(75,'Finland','FIN')\000d\000a,(76,'France','FRA')\000d\000a,(77,'French Guiana','GUF')\000d\000a,(78,'French Polynesia','PYF')\000d\000a,(79,'French Southern Territories (the)','ATF')\000d\000a,(80,'Gabon','GAB')\000d\000a,(81,'Gambia (the)','GMB')\000d\000a,(82,'Georgia','GEO')\000d\000a,(83,'Germany','DEU')\000d\000a,(84,'Ghana','GHA')\000d\000a,(85,'Gibraltar','GIB')\000d\000a,(86,'Greece','GRC')\000d\000a,(87,'Greenland','GRL')\000d\000a,(88,'Grenada','GRD')\000d\000a,(89,'Guadeloupe','GLP')\000d\000a,(90,'Guam','GUM')\000d\000a,(91,'Guatemala','GTM')\000d\000a,(92,'Guernsey','GGY')\000d\000a,(93,'Guinea','GIN')\000d\000a,(94,'Guinea-Bissau','GNB')\000d\000a,(95,'Guyana','GUY')\000d\000a,(96,'Haiti','HTI')\000d\000a,(97,'Heard Island and McDonald Islands','HMD')\000d\000a,(98,'Holy See (the)','VAT')\000d\000a,(99,'Honduras','HND')\000d\000a,(100,'Hong Kong','HKG[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(1,'Afghanistan','AFG')
,(2,'Albania','ALB')
,(3,'Algeria','DZA')
,(4,'American Samoa','ASM')
,(5,'Andorra','AND')
,(6,'Angola','AGO')
,(7,'Anguilla','AIA')
,(8,'Antarctica','ATA')
,(9,'Antigua and Barbuda','ATG')
,(10,'Argentina','ARG')
,(11,'Armenia','ARM')
,(12,'Aruba','ABW')
,(13,'Australia','AUS')
,(14,'Austria','AUT')
,(15,'Azerbaijan','AZE')
,(16,'Bahamas (the)','BHS')
,(17,'Bahrain','BHR')
,(18,'Bangladesh','BGD')
,(19,'Barbados','BRB')
,(20,'Belarus','BLR')
,(21,'Belgium','BEL')
,(22,'Belize','BLZ')
,(23,'Benin','BEN')
,(24,'Bermuda','BMU')
,(25,'Bhutan','BTN')
,(26,'Bolivia (Plurinational State of)','BOL')
,(27,'Bonaire, Sint Eustatius and Saba','BES')
,(28,'Bosnia and Herzegovina','BIH')
,(29,'Botswana','BWA')
,(30,'Bouvet Island','BVT')
,(31,'Brazil','BRA')
,(32,'British Indian Ocean Territory (the)','IOT')
,(33,'Brunei Darussalam','BRN')
,(34,'Bulgaria','BGR')
,(35,'Burkina Faso','BFA')
,(36,'Burundi','BDI')
,(37,'Cabo Verde','CPV')
,(38,'Cambodia','KHM')
,(39,'Cameroon','CMR')
,(40,'Canada','CAN')
,(41,'Cayman Islands (the)','CYM')
,(42,'Central African Republic (the)','CAF')
,(43,'Chad','TCD')
,(44,'Chile','CHL')
,(45,'China','CHN')
,(46,'Christmas Island','CXR')
,(47,'Cocos (Keeling) Islands (the)','CCK')
,(48,'Colombia','COL')
,(49,'Comoros (the)','COM')
,(50,'Congo (the Democratic Republic of the)','COD')
,(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK')
,(61,'Djibouti','DJI')
,(62,'Dominica','DMA')
,(63,'Dominican Republic (the)','DOM')
,(64,'Ecuador','ECU')
,(65,'Egypt','EGY')
,(66,'El Salvador','SLV')
,(67,'Equatorial Guinea','GNQ')
,(68,'Eritrea','ERI')
,(69,'Estonia','EST')
,(70,'Eswatini','SWZ')
,(71,'Ethiopia','ETH')
,(72,'Falkland Islands (the) [Malvinas]','FLK')
,(73,'Faroe Islands (the)','FRO')
,(74,'Fiji','FJI')
,(75,'Finland','FIN')
,(76,'France','FRA')
,(77,'French Guiana','GUF')
,(78,'French Polynesia','PYF')
,(79,'French Southern Territories (the)','ATF')
,(80,'Gabon','GAB')
,(81,'Gambia (the)','GMB')
,(82,'Georgia','GEO')
,(83,'Germany','DEU')
,(84,'Ghana','GHA')
,(85,'Gibraltar','GIB')
,(86,'Greece','GRC')
,(87,'Greenland','GRL')
,(88,'Grenada','GRD')
,(89,'Guadeloupe','GLP')
,(90,'Guam','GUM')
,(91,'Guatemala','GTM')
,(92,'Guernsey','GGY')
,(93,'Guinea','GIN')
,(94,'Guinea-Bissau','GNB')
,(95,'Guyana','GUY')
,(96,'Haiti','HTI')
,(97,'Heard Island and McDonald Islands','HMD')
,(98,'Holy See (the)','VAT')
,(99,'Honduras','HND')
,(100,'Hong Kong','HKG') [42000-214]
2022-12-22 03:59:39 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(51,'Congo (the)','COG')\000d\000a,(52,'Cook Islands (the)','COK')\000d\000a,(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(51,'Congo (the)','COG')
,(52,'Cook Islands (the)','COK')
,(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK') [42000-214]
2022-12-22 04:01:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(53,'Costa Rica','CRI')\000d\000a,(54,'Croatia','HRV')\000d\000a,(55,'Cuba','CUB')\000d\000a,(56,'Curaçao','CUW')\000d\000a,(57,'Cyprus','CYP')\000d\000a,(58,'Czechia','CZE')\000d\000a,(59,'Côte d'Ivoire','CIV')\000d\000a,(60,'Denmark','DNK[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(53,'Costa Rica','CRI')
,(54,'Croatia','HRV')
,(55,'Cuba','CUB')
,(56,'Curaçao','CUW')
,(57,'Cyprus','CYP')
,(58,'Czechia','CZE')
,(59,'Côte d'Ivoire','CIV')
,(60,'Denmark','DNK') [42000-214]
2022-12-22 04:03:12 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People'[*]s Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao People's Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Réunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP')"; expected "[, ::, AT, FORMAT, *, /, %, +, -, ||, NOT, IS, ILIKE, REGEXP, AND, OR, ,, )"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao People's Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Réunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena, Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP') [42001-214]
2022-12-22 04:05:14 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao Peoples Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Reunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao Peoples Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Reunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP') [42000-214]
2022-12-22 04:07:47 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao Peoples Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Reunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC')\000d\000a,(199,'Sierra Leone','SLE')\000d\000a,(200,'Singapore','SGP[*]');"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao Peoples Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Reunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC')
,(199,'Sierra Leone','SLE')
,(200,'Singapore','SGP'); [42000-214]
2022-12-22 04:08:02 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao Peoples Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI')\000d\000a,(137,'Malta','MLT')\000d\000a,(138,'Marshall Islands (the)','MHL')\000d\000a,(139,'Martinique','MTQ')\000d\000a,(140,'Mauritania','MRT')\000d\000a,(141,'Mauritius','MUS')\000d\000a,(142,'Mayotte','MYT')\000d\000a,(143,'Mexico','MEX')\000d\000a,(144,'Micronesia (Federated States of)','FSM')\000d\000a,(145,'Moldova (the Republic of)','MDA')\000d\000a,(146,'Monaco','MCO')\000d\000a,(147,'Mongolia','MNG')\000d\000a,(148,'Montenegro','MNE')\000d\000a,(149,'Montserrat','MSR')\000d\000a,(150,'Morocco','MAR')\000d\000a,(151,'Mozambique','MOZ')\000d\000a,(152,'Myanmar','MMR')\000d\000a,(153,'Namibia','NAM')\000d\000a,(154,'Nauru','NRU')\000d\000a,(155,'Nepal','NPL')\000d\000a,(156,'Netherlands (the)','NLD')\000d\000a,(157,'New Caledonia','NCL')\000d\000a,(158,'New Zealand','NZL')\000d\000a,(159,'Nicaragua','NIC')\000d\000a,(160,'Niger (the)','NER')\000d\000a,(161,'Nigeria','NGA')\000d\000a,(162,'Niue','NIU')\000d\000a,(163,'Norfolk Island','NFK')\000d\000a,(164,'Northern Mariana Islands (the)','MNP')\000d\000a,(165,'Norway','NOR')\000d\000a,(166,'Oman','OMN')\000d\000a,(167,'Pakistan','PAK')\000d\000a,(168,'Palau','PLW')\000d\000a,(169,'Palestine, State of','PSE')\000d\000a,(170,'Panama','PAN')\000d\000a,(171,'Papua New Guinea','PNG')\000d\000a,(172,'Paraguay','PRY')\000d\000a,(173,'Peru','PER')\000d\000a,(174,'Philippines (the)','PHL')\000d\000a,(175,'Pitcairn','PCN')\000d\000a,(176,'Poland','POL')\000d\000a,(177,'Portugal','PRT')\000d\000a,(178,'Puerto Rico','PRI')\000d\000a,(179,'Qatar','QAT')\000d\000a,(180,'Republic of North Macedonia','MKD')\000d\000a,(181,'Romania','ROU')\000d\000a,(182,'Russian Federation (the)','RUS')\000d\000a,(183,'Rwanda','RWA')\000d\000a,(184,'Reunion','REU')\000d\000a,(185,'Saint Barthélemy','BLM')\000d\000a,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')\000d\000a,(187,'Saint Kitts and Nevis','KNA')\000d\000a,(188,'Saint Lucia','LCA')\000d\000a,(189,'Saint Martin (French part)','MAF')\000d\000a,(190,'Saint Pierre and Miquelon','SPM')\000d\000a,(191,'Saint Vincent and the Grenadines','VCT')\000d\000a,(192,'Samoa','WSM')\000d\000a,(193,'San Marino','SMR')\000d\000a,(194,'Sao Tome and Principe','STP')\000d\000a,(195,'Saudi Arabia','SAU')\000d\000a,(196,'Senegal','SEN')\000d\000a,(197,'Serbia','SRB')\000d\000a,(198,'Seychelles','SYC[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao Peoples Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI')
,(137,'Malta','MLT')
,(138,'Marshall Islands (the)','MHL')
,(139,'Martinique','MTQ')
,(140,'Mauritania','MRT')
,(141,'Mauritius','MUS')
,(142,'Mayotte','MYT')
,(143,'Mexico','MEX')
,(144,'Micronesia (Federated States of)','FSM')
,(145,'Moldova (the Republic of)','MDA')
,(146,'Monaco','MCO')
,(147,'Mongolia','MNG')
,(148,'Montenegro','MNE')
,(149,'Montserrat','MSR')
,(150,'Morocco','MAR')
,(151,'Mozambique','MOZ')
,(152,'Myanmar','MMR')
,(153,'Namibia','NAM')
,(154,'Nauru','NRU')
,(155,'Nepal','NPL')
,(156,'Netherlands (the)','NLD')
,(157,'New Caledonia','NCL')
,(158,'New Zealand','NZL')
,(159,'Nicaragua','NIC')
,(160,'Niger (the)','NER')
,(161,'Nigeria','NGA')
,(162,'Niue','NIU')
,(163,'Norfolk Island','NFK')
,(164,'Northern Mariana Islands (the)','MNP')
,(165,'Norway','NOR')
,(166,'Oman','OMN')
,(167,'Pakistan','PAK')
,(168,'Palau','PLW')
,(169,'Palestine, State of','PSE')
,(170,'Panama','PAN')
,(171,'Papua New Guinea','PNG')
,(172,'Paraguay','PRY')
,(173,'Peru','PER')
,(174,'Philippines (the)','PHL')
,(175,'Pitcairn','PCN')
,(176,'Poland','POL')
,(177,'Portugal','PRT')
,(178,'Puerto Rico','PRI')
,(179,'Qatar','QAT')
,(180,'Republic of North Macedonia','MKD')
,(181,'Romania','ROU')
,(182,'Russian Federation (the)','RUS')
,(183,'Rwanda','RWA')
,(184,'Reunion','REU')
,(185,'Saint Barthélemy','BLM')
,(186,'Saint Helena Ascension and Tristan da Cunha','SHN')
,(187,'Saint Kitts and Nevis','KNA')
,(188,'Saint Lucia','LCA')
,(189,'Saint Martin (French part)','MAF')
,(190,'Saint Pierre and Miquelon','SPM')
,(191,'Saint Vincent and the Grenadines','VCT')
,(192,'Samoa','WSM')
,(193,'San Marino','SMR')
,(194,'Sao Tome and Principe','STP')
,(195,'Saudi Arabia','SAU')
,(196,'Senegal','SEN')
,(197,'Serbia','SRB')
,(198,'Seychelles','SYC') [42000-214]
2022-12-22 04:08:34 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')\000d\000a,(102,'Iceland','ISL')\000d\000a,(103,'India','IND')\000d\000a,(104,'Indonesia','IDN')\000d\000a,(105,'Iran (Islamic Republic of)','IRN')\000d\000a,(106,'Iraq','IRQ')\000d\000a,(107,'Ireland','IRL')\000d\000a,(108,'Isle of Man','IMN')\000d\000a,(109,'Israel','ISR')\000d\000a,(110,'Italy','ITA')\000d\000a,(111,'Jamaica','JAM')\000d\000a,(112,'Japan','JPN')\000d\000a,(113,'Jersey','JEY')\000d\000a,(114,'Jordan','JOR')\000d\000a,(115,'Kazakhstan','KAZ')\000d\000a,(116,'Kenya','KEN')\000d\000a,(117,'Kiribati','KIR')\000d\000a,(118,'Korea (the Democratic People's Republic of)','PRK')\000d\000a,(119,'Korea (the Republic of)','KOR')\000d\000a,(120,'Kuwait','KWT')\000d\000a,(121,'Kyrgyzstan','KGZ')\000d\000a,(122,'Lao Peoples Democratic Republic (the)','LAO')\000d\000a,(123,'Latvia','LVA')\000d\000a,(124,'Lebanon','LBN')\000d\000a,(125,'Lesotho','LSO')\000d\000a,(126,'Liberia','LBR')\000d\000a,(127,'Libya','LBY')\000d\000a,(128,'Liechtenstein','LIE')\000d\000a,(129,'Lithuania','LTU')\000d\000a,(130,'Luxembourg','LUX')\000d\000a,(131,'Macao','MAC')\000d\000a,(132,'Madagascar','MDG')\000d\000a,(133,'Malawi','MWI')\000d\000a,(134,'Malaysia','MYS')\000d\000a,(135,'Maldives','MDV')\000d\000a,(136,'Mali','MLI[*]')"; SQL statement:
insert into Country(id,country_name,ISO3CODE) values(101,'Hungary','HUN')
,(102,'Iceland','ISL')
,(103,'India','IND')
,(104,'Indonesia','IDN')
,(105,'Iran (Islamic Republic of)','IRN')
,(106,'Iraq','IRQ')
,(107,'Ireland','IRL')
,(108,'Isle of Man','IMN')
,(109,'Israel','ISR')
,(110,'Italy','ITA')
,(111,'Jamaica','JAM')
,(112,'Japan','JPN')
,(113,'Jersey','JEY')
,(114,'Jordan','JOR')
,(115,'Kazakhstan','KAZ')
,(116,'Kenya','KEN')
,(117,'Kiribati','KIR')
,(118,'Korea (the Democratic People's Republic of)','PRK')
,(119,'Korea (the Republic of)','KOR')
,(120,'Kuwait','KWT')
,(121,'Kyrgyzstan','KGZ')
,(122,'Lao Peoples Democratic Republic (the)','LAO')
,(123,'Latvia','LVA')
,(124,'Lebanon','LBN')
,(125,'Lesotho','LSO')
,(126,'Liberia','LBR')
,(127,'Libya','LBY')
,(128,'Liechtenstein','LIE')
,(129,'Lithuania','LTU')
,(130,'Luxembourg','LUX')
,(131,'Macao','MAC')
,(132,'Madagascar','MDG')
,(133,'Malawi','MWI')
,(134,'Malaysia','MYS')
,(135,'Maldives','MDV')
,(136,'Mali','MLI') [42000-214]
2022-12-22 04:21:20 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$logDataSources$1(H2ConsoleAutoConfiguration.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:92)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:68)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.withThreadContextClassLoader(H2ConsoleAutoConfiguration.java:77)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:203)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:265)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:430)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 96 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 90 more
2022-12-22 04:21:22 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 61 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 55 more
2022-12-22 04:21:24 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 54 more
2022-12-22 04:33:39 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$logDataSources$1(H2ConsoleAutoConfiguration.java:86)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.logDataSources(H2ConsoleAutoConfiguration.java:92)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.lambda$h2Console$0(H2ConsoleAutoConfiguration.java:68)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.withThreadContextClassLoader(H2ConsoleAutoConfiguration.java:77)
	at org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration.h2Console(H2ConsoleAutoConfiguration.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:638)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:203)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addServletContextInitializerBeans(ServletContextInitializerBeans.java:97)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:262)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:236)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5211)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1393)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1383)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:916)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:265)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:430)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:479)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:211)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:184)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 96 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 90 more
2022-12-22 04:33:40 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 61 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 55 more
2022-12-22 04:33:42 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:125)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3318)
	at org.h2.mvstore.MVStore.panic(MVStore.java:593)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:469)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4082)
	at org.h2.mvstore.db.Store.<init>(Store.java:136)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:44)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.extract.spi.ExtractionContext.getQueryResults(ExtractionContext.java:43)
	at org.hibernate.tool.schema.extract.internal.SequenceInformationExtractorLegacyImpl.extractMetadata(SequenceInformationExtractorLegacyImpl.java:39)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.initializeSequences(DatabaseInformationImpl.java:66)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.<init>(DatabaseInformationImpl.java:60)
	at org.hibernate.tool.schema.internal.Helper.buildDatabaseInformation(Helper.java:183)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:104)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:196)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:85)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:335)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:471)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1498)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at com.ibm.CountryResourceApplication.main(CountryResourceApplication.java:10)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]" [50000-214]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 60 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/0031YA744/Documents/Projects/Test/countryResource/testdb.mv.db [2.1.214/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:178)
	at org.h2.mvstore.FileStore.open(FileStore.java:128)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:452)
	... 54 more
